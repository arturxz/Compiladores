/* This file was generated by SableCC (http://www.sablecc.org/). */

package linguagem.node;

import linguagem.analysis.*;

@SuppressWarnings("nls")
public final class AComVirgulaPosDecl extends PPosDecl
{
    private PVar _var_;
    private TVirgula _virgula_;
    private PPosDecl _posDecl_;

    public AComVirgulaPosDecl()
    {
        // Constructor
    }

    public AComVirgulaPosDecl(
        @SuppressWarnings("hiding") PVar _var_,
        @SuppressWarnings("hiding") TVirgula _virgula_,
        @SuppressWarnings("hiding") PPosDecl _posDecl_)
    {
        // Constructor
        setVar(_var_);

        setVirgula(_virgula_);

        setPosDecl(_posDecl_);

    }

    @Override
    public Object clone()
    {
        return new AComVirgulaPosDecl(
            cloneNode(this._var_),
            cloneNode(this._virgula_),
            cloneNode(this._posDecl_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAComVirgulaPosDecl(this);
    }

    public PVar getVar()
    {
        return this._var_;
    }

    public void setVar(PVar node)
    {
        if(this._var_ != null)
        {
            this._var_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._var_ = node;
    }

    public TVirgula getVirgula()
    {
        return this._virgula_;
    }

    public void setVirgula(TVirgula node)
    {
        if(this._virgula_ != null)
        {
            this._virgula_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._virgula_ = node;
    }

    public PPosDecl getPosDecl()
    {
        return this._posDecl_;
    }

    public void setPosDecl(PPosDecl node)
    {
        if(this._posDecl_ != null)
        {
            this._posDecl_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._posDecl_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._var_)
            + toString(this._virgula_)
            + toString(this._posDecl_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._var_ == child)
        {
            this._var_ = null;
            return;
        }

        if(this._virgula_ == child)
        {
            this._virgula_ = null;
            return;
        }

        if(this._posDecl_ == child)
        {
            this._posDecl_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._var_ == oldChild)
        {
            setVar((PVar) newChild);
            return;
        }

        if(this._virgula_ == oldChild)
        {
            setVirgula((TVirgula) newChild);
            return;
        }

        if(this._posDecl_ == oldChild)
        {
            setPosDecl((PPosDecl) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
