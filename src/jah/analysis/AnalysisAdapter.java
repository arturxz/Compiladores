/* This file was generated by SableCC (http://www.sablecc.org/). */

package jah.analysis;

import java.util.*;
import jah.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPgrInicio(APgrInicio node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAComDeclPgrDeclParte(AComDeclPgrDeclParte node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASemDeclPgrDeclParte(ASemDeclPgrDeclParte node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAComCommPgrCommParte(AComCommPgrCommParte node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASemCommPgrCommParte(ASemCommPgrCommParte node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPgrFinal(APgrFinal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariavelDecl(AVariavelDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAConstanteDecl(AConstanteDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAComVirgulaPosDecl(AComVirgulaPosDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASemVirgulaPosDecl(ASemVirgulaPosDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARealTipo(ARealTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAInteiroTipo(AInteiroTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStringTipo(AStringTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANormalVar(ANormalVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArrayVar(AArrayVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStringValor(AStringValor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAInteiroValor(AInteiroValor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARealValor(ARealValor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMaisComandosComandos(AMaisComandosComandos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAComandoVazioComandos(AComandoVazioComandos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimplesComm(ASimplesComm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALeiaComm(ALeiaComm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEscrevaComm(AEscrevaComm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASeComm(ASeComm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAvalieComm(AAvalieComm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEnquantoComm(AEnquantoComm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARepitaComm(ARepitaComm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParaComm(AParaComm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACommLeia(ACommLeia node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariosExpCommLeiaSegundaParte(AVariosExpCommLeiaSegundaParte node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAUmExpCommLeiaSegundaParte(AUmExpCommLeiaSegundaParte node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACommLeiaTerceiraParte(ACommLeiaTerceiraParte node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACommEscreva(ACommEscreva node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariosExpCommEscrevaSegundaParte(AVariosExpCommEscrevaSegundaParte node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAUmExpCommEscrevaSegundaParte(AUmExpCommEscrevaSegundaParte node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACommEscrevaTerceiraParte(ACommEscrevaTerceiraParte node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACommSe(ACommSe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACommSeSenao(ACommSeSenao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACommSeFim(ACommSeFim node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACommAvalie(ACommAvalie node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAComCasoCommAvalieCasoParte(AComCasoCommAvalieCasoParte node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASemCasoCommAvalieCasoParte(ASemCasoCommAvalieCasoParte node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAComSenaoCommAvalieSenaoParte(AComSenaoCommAvalieSenaoParte node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASemSenaoCommAvalieSenaoParte(ASemSenaoCommAvalieSenaoParte node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACommAvalieFim(ACommAvalieFim node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACommEnquanto(ACommEnquanto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACommEnquantoFim(ACommEnquantoFim node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACommRepita(ACommRepita node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACommRepitaComandosParte(ACommRepitaComandosParte node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACommRepitaCondicaoParte(ACommRepitaCondicaoParte node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACommPara(ACommPara node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAComPassoCommParaPassa(AComPassoCommParaPassa node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASemPassoCommParaPassa(ASemPassoCommParaPassa node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACommParaAte(ACommParaAte node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACommParaMeio(ACommParaMeio node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACommParaFim(ACommParaFim node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAriExpOuExpLogica(AAriExpOuExpLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALogExpOuExpLogica(ALogExpOuExpLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASomaExp(ASomaExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASubtExp(ASubtExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATermExp(ATermExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultTermo(AMultTermo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADiviTermo(ADiviTermo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFimTermo(AFimTermo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParentesisExpFinal(AParentesisExpFinal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANegativaExpExpFinal(ANegativaExpExpFinal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASubstituirVarExpFinal(ASubstituirVarExpFinal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASubstituirValExpFinal(ASubstituirValExpFinal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAndExpLogica(AAndExpLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOuExpLogica(AOuExpLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAXorExpLogica(AXorExpLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANotExpLogica(ANotExpLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrxExpLogica(APrxExpLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADiferenteLogPrecUm(ADiferenteLogPrecUm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIgualLogPrecUm(AIgualLogPrecUm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFatorLogPrecUm(AFatorLogPrecUm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMaiorLogPrecDois(AMaiorLogPrecDois node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMenorLogPrecDois(AMenorLogPrecDois node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMaiorqLogPrecDois(AMaiorqLogPrecDois node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMenorqLogPrecDois(AMenorqLogPrecDois node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParLogPrecDois(AParLogPrecDois node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPrograma(TPrograma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInicio(TInicio node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFim(TFim node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFimPrograma(TFimPrograma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLeia(TLeia node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEscreva(TEscreva node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTConstante(TConstante node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFaca(TFaca node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAte(TAte node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDe(TDe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPasso(TPasso node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSenao(TSenao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEntao(TEntao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSe(TSe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCaso(TCaso node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAvalie(TAvalie node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEnquanto(TEnquanto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPara(TPara node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRepita(TRepita node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSoma(TSoma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSub(TSub node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMaior(TMaior node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenor(TMenor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIgual(TIgual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMaiorIgual(TMaiorIgual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenorIgual(TMenorIgual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiferente(TDiferente node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNao(TNao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTE(TE node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOu(TOu node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTXor(TXor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTipoInteiro(TTipoInteiro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTipoReal(TTipoReal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTipoString(TTipoString node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTipoBooleano(TTipoBooleano node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVirgula(TVirgula node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPonto(TPonto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPontoVirgula(TPontoVirgula node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDoisPontos(TDoisPontos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAbreParentesis(TAbreParentesis node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFechaParentesis(TFechaParentesis node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAbreColchetes(TAbreColchetes node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFechaColchetes(TFechaColchetes node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAtribuicao(TAtribuicao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAspasSimples(TAspasSimples node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAspasDuplas(TAspasDuplas node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNovaLinha(TNovaLinha node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTab(TTab node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEspaco(TEspaco node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInteiro(TInteiro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTReal(TReal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTString(TString node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBooleano(TBooleano node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTId(TId node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentarioLinha(TComentarioLinha node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentarioBlocoAbre(TComentarioBlocoAbre node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentarioBlocoFecha(TComentarioBlocoFecha node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
