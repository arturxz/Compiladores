/* This file was generated by SableCC (http://www.sablecc.org/). */

package jah.node;

import jah.analysis.*;

@SuppressWarnings("nls")
public final class AExpDiferenteExpExplogicaDiff extends PExplogicaDiff
{
    private PExp _exp_;
    private TDiferente _diferente_;
    private PExplogicaMenor _explogicaMenor_;

    public AExpDiferenteExpExplogicaDiff()
    {
        // Constructor
    }

    public AExpDiferenteExpExplogicaDiff(
        @SuppressWarnings("hiding") PExp _exp_,
        @SuppressWarnings("hiding") TDiferente _diferente_,
        @SuppressWarnings("hiding") PExplogicaMenor _explogicaMenor_)
    {
        // Constructor
        setExp(_exp_);

        setDiferente(_diferente_);

        setExplogicaMenor(_explogicaMenor_);

    }

    @Override
    public Object clone()
    {
        return new AExpDiferenteExpExplogicaDiff(
            cloneNode(this._exp_),
            cloneNode(this._diferente_),
            cloneNode(this._explogicaMenor_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAExpDiferenteExpExplogicaDiff(this);
    }

    public PExp getExp()
    {
        return this._exp_;
    }

    public void setExp(PExp node)
    {
        if(this._exp_ != null)
        {
            this._exp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exp_ = node;
    }

    public TDiferente getDiferente()
    {
        return this._diferente_;
    }

    public void setDiferente(TDiferente node)
    {
        if(this._diferente_ != null)
        {
            this._diferente_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._diferente_ = node;
    }

    public PExplogicaMenor getExplogicaMenor()
    {
        return this._explogicaMenor_;
    }

    public void setExplogicaMenor(PExplogicaMenor node)
    {
        if(this._explogicaMenor_ != null)
        {
            this._explogicaMenor_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._explogicaMenor_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._exp_)
            + toString(this._diferente_)
            + toString(this._explogicaMenor_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._exp_ == child)
        {
            this._exp_ = null;
            return;
        }

        if(this._diferente_ == child)
        {
            this._diferente_ = null;
            return;
        }

        if(this._explogicaMenor_ == child)
        {
            this._explogicaMenor_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._exp_ == oldChild)
        {
            setExp((PExp) newChild);
            return;
        }

        if(this._diferente_ == oldChild)
        {
            setDiferente((TDiferente) newChild);
            return;
        }

        if(this._explogicaMenor_ == oldChild)
        {
            setExplogicaMenor((PExplogicaMenor) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
