/* This file was generated by SableCC (http://www.sablecc.org/). */

package jah.node;

import jah.analysis.*;

@SuppressWarnings("nls")
public final class AComandoLeiaComm extends PComm
{
    private TLeia _leia_;
    private TAbreParentesis _abreParentesis_;
    private PPosDecl _posDecl_;
    private TFechaParentesis _fechaParentesis_;
    private TPontoVirgula _pontoVirgula_;

    public AComandoLeiaComm()
    {
        // Constructor
    }

    public AComandoLeiaComm(
        @SuppressWarnings("hiding") TLeia _leia_,
        @SuppressWarnings("hiding") TAbreParentesis _abreParentesis_,
        @SuppressWarnings("hiding") PPosDecl _posDecl_,
        @SuppressWarnings("hiding") TFechaParentesis _fechaParentesis_,
        @SuppressWarnings("hiding") TPontoVirgula _pontoVirgula_)
    {
        // Constructor
        setLeia(_leia_);

        setAbreParentesis(_abreParentesis_);

        setPosDecl(_posDecl_);

        setFechaParentesis(_fechaParentesis_);

        setPontoVirgula(_pontoVirgula_);

    }

    @Override
    public Object clone()
    {
        return new AComandoLeiaComm(
            cloneNode(this._leia_),
            cloneNode(this._abreParentesis_),
            cloneNode(this._posDecl_),
            cloneNode(this._fechaParentesis_),
            cloneNode(this._pontoVirgula_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAComandoLeiaComm(this);
    }

    public TLeia getLeia()
    {
        return this._leia_;
    }

    public void setLeia(TLeia node)
    {
        if(this._leia_ != null)
        {
            this._leia_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._leia_ = node;
    }

    public TAbreParentesis getAbreParentesis()
    {
        return this._abreParentesis_;
    }

    public void setAbreParentesis(TAbreParentesis node)
    {
        if(this._abreParentesis_ != null)
        {
            this._abreParentesis_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._abreParentesis_ = node;
    }

    public PPosDecl getPosDecl()
    {
        return this._posDecl_;
    }

    public void setPosDecl(PPosDecl node)
    {
        if(this._posDecl_ != null)
        {
            this._posDecl_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._posDecl_ = node;
    }

    public TFechaParentesis getFechaParentesis()
    {
        return this._fechaParentesis_;
    }

    public void setFechaParentesis(TFechaParentesis node)
    {
        if(this._fechaParentesis_ != null)
        {
            this._fechaParentesis_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fechaParentesis_ = node;
    }

    public TPontoVirgula getPontoVirgula()
    {
        return this._pontoVirgula_;
    }

    public void setPontoVirgula(TPontoVirgula node)
    {
        if(this._pontoVirgula_ != null)
        {
            this._pontoVirgula_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pontoVirgula_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._leia_)
            + toString(this._abreParentesis_)
            + toString(this._posDecl_)
            + toString(this._fechaParentesis_)
            + toString(this._pontoVirgula_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._leia_ == child)
        {
            this._leia_ = null;
            return;
        }

        if(this._abreParentesis_ == child)
        {
            this._abreParentesis_ = null;
            return;
        }

        if(this._posDecl_ == child)
        {
            this._posDecl_ = null;
            return;
        }

        if(this._fechaParentesis_ == child)
        {
            this._fechaParentesis_ = null;
            return;
        }

        if(this._pontoVirgula_ == child)
        {
            this._pontoVirgula_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._leia_ == oldChild)
        {
            setLeia((TLeia) newChild);
            return;
        }

        if(this._abreParentesis_ == oldChild)
        {
            setAbreParentesis((TAbreParentesis) newChild);
            return;
        }

        if(this._posDecl_ == oldChild)
        {
            setPosDecl((PPosDecl) newChild);
            return;
        }

        if(this._fechaParentesis_ == oldChild)
        {
            setFechaParentesis((TFechaParentesis) newChild);
            return;
        }

        if(this._pontoVirgula_ == oldChild)
        {
            setPontoVirgula((TPontoVirgula) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
