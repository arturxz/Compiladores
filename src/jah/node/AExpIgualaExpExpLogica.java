/* This file was generated by SableCC (http://www.sablecc.org/). */

package jah.node;

import jah.analysis.*;

@SuppressWarnings("nls")
public final class AExpIgualaExpExpLogica extends PExpLogica
{
    private PExp _exp_;
    private TIgual _igual_;
    private PPosExp _posExp_;

    public AExpIgualaExpExpLogica()
    {
        // Constructor
    }

    public AExpIgualaExpExpLogica(
        @SuppressWarnings("hiding") PExp _exp_,
        @SuppressWarnings("hiding") TIgual _igual_,
        @SuppressWarnings("hiding") PPosExp _posExp_)
    {
        // Constructor
        setExp(_exp_);

        setIgual(_igual_);

        setPosExp(_posExp_);

    }

    @Override
    public Object clone()
    {
        return new AExpIgualaExpExpLogica(
            cloneNode(this._exp_),
            cloneNode(this._igual_),
            cloneNode(this._posExp_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAExpIgualaExpExpLogica(this);
    }

    public PExp getExp()
    {
        return this._exp_;
    }

    public void setExp(PExp node)
    {
        if(this._exp_ != null)
        {
            this._exp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exp_ = node;
    }

    public TIgual getIgual()
    {
        return this._igual_;
    }

    public void setIgual(TIgual node)
    {
        if(this._igual_ != null)
        {
            this._igual_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._igual_ = node;
    }

    public PPosExp getPosExp()
    {
        return this._posExp_;
    }

    public void setPosExp(PPosExp node)
    {
        if(this._posExp_ != null)
        {
            this._posExp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._posExp_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._exp_)
            + toString(this._igual_)
            + toString(this._posExp_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._exp_ == child)
        {
            this._exp_ = null;
            return;
        }

        if(this._igual_ == child)
        {
            this._igual_ = null;
            return;
        }

        if(this._posExp_ == child)
        {
            this._posExp_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._exp_ == oldChild)
        {
            setExp((PExp) newChild);
            return;
        }

        if(this._igual_ == oldChild)
        {
            setIgual((TIgual) newChild);
            return;
        }

        if(this._posExp_ == oldChild)
        {
            setPosExp((PPosExp) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
