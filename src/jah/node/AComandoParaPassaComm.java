/* This file was generated by SableCC (http://www.sablecc.org/). */

package jah.node;

import jah.analysis.*;

@SuppressWarnings("nls")
public final class AComandoParaPassaComm extends PComm
{
    private PInicioPara _inicioPara_;
    private PPassoPara _passoPara_;
    private TAte _ate_;
    private TInteiro _inteiro_;
    private TFaca _faca_;
    private PMultiplosComm _multiplosComm_;
    private PFimPara _fimPara_;
    private TPontoVirgula _pontoVirgula_;

    public AComandoParaPassaComm()
    {
        // Constructor
    }

    public AComandoParaPassaComm(
        @SuppressWarnings("hiding") PInicioPara _inicioPara_,
        @SuppressWarnings("hiding") PPassoPara _passoPara_,
        @SuppressWarnings("hiding") TAte _ate_,
        @SuppressWarnings("hiding") TInteiro _inteiro_,
        @SuppressWarnings("hiding") TFaca _faca_,
        @SuppressWarnings("hiding") PMultiplosComm _multiplosComm_,
        @SuppressWarnings("hiding") PFimPara _fimPara_,
        @SuppressWarnings("hiding") TPontoVirgula _pontoVirgula_)
    {
        // Constructor
        setInicioPara(_inicioPara_);

        setPassoPara(_passoPara_);

        setAte(_ate_);

        setInteiro(_inteiro_);

        setFaca(_faca_);

        setMultiplosComm(_multiplosComm_);

        setFimPara(_fimPara_);

        setPontoVirgula(_pontoVirgula_);

    }

    @Override
    public Object clone()
    {
        return new AComandoParaPassaComm(
            cloneNode(this._inicioPara_),
            cloneNode(this._passoPara_),
            cloneNode(this._ate_),
            cloneNode(this._inteiro_),
            cloneNode(this._faca_),
            cloneNode(this._multiplosComm_),
            cloneNode(this._fimPara_),
            cloneNode(this._pontoVirgula_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAComandoParaPassaComm(this);
    }

    public PInicioPara getInicioPara()
    {
        return this._inicioPara_;
    }

    public void setInicioPara(PInicioPara node)
    {
        if(this._inicioPara_ != null)
        {
            this._inicioPara_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._inicioPara_ = node;
    }

    public PPassoPara getPassoPara()
    {
        return this._passoPara_;
    }

    public void setPassoPara(PPassoPara node)
    {
        if(this._passoPara_ != null)
        {
            this._passoPara_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._passoPara_ = node;
    }

    public TAte getAte()
    {
        return this._ate_;
    }

    public void setAte(TAte node)
    {
        if(this._ate_ != null)
        {
            this._ate_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ate_ = node;
    }

    public TInteiro getInteiro()
    {
        return this._inteiro_;
    }

    public void setInteiro(TInteiro node)
    {
        if(this._inteiro_ != null)
        {
            this._inteiro_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._inteiro_ = node;
    }

    public TFaca getFaca()
    {
        return this._faca_;
    }

    public void setFaca(TFaca node)
    {
        if(this._faca_ != null)
        {
            this._faca_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._faca_ = node;
    }

    public PMultiplosComm getMultiplosComm()
    {
        return this._multiplosComm_;
    }

    public void setMultiplosComm(PMultiplosComm node)
    {
        if(this._multiplosComm_ != null)
        {
            this._multiplosComm_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._multiplosComm_ = node;
    }

    public PFimPara getFimPara()
    {
        return this._fimPara_;
    }

    public void setFimPara(PFimPara node)
    {
        if(this._fimPara_ != null)
        {
            this._fimPara_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fimPara_ = node;
    }

    public TPontoVirgula getPontoVirgula()
    {
        return this._pontoVirgula_;
    }

    public void setPontoVirgula(TPontoVirgula node)
    {
        if(this._pontoVirgula_ != null)
        {
            this._pontoVirgula_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pontoVirgula_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._inicioPara_)
            + toString(this._passoPara_)
            + toString(this._ate_)
            + toString(this._inteiro_)
            + toString(this._faca_)
            + toString(this._multiplosComm_)
            + toString(this._fimPara_)
            + toString(this._pontoVirgula_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._inicioPara_ == child)
        {
            this._inicioPara_ = null;
            return;
        }

        if(this._passoPara_ == child)
        {
            this._passoPara_ = null;
            return;
        }

        if(this._ate_ == child)
        {
            this._ate_ = null;
            return;
        }

        if(this._inteiro_ == child)
        {
            this._inteiro_ = null;
            return;
        }

        if(this._faca_ == child)
        {
            this._faca_ = null;
            return;
        }

        if(this._multiplosComm_ == child)
        {
            this._multiplosComm_ = null;
            return;
        }

        if(this._fimPara_ == child)
        {
            this._fimPara_ = null;
            return;
        }

        if(this._pontoVirgula_ == child)
        {
            this._pontoVirgula_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._inicioPara_ == oldChild)
        {
            setInicioPara((PInicioPara) newChild);
            return;
        }

        if(this._passoPara_ == oldChild)
        {
            setPassoPara((PPassoPara) newChild);
            return;
        }

        if(this._ate_ == oldChild)
        {
            setAte((TAte) newChild);
            return;
        }

        if(this._inteiro_ == oldChild)
        {
            setInteiro((TInteiro) newChild);
            return;
        }

        if(this._faca_ == oldChild)
        {
            setFaca((TFaca) newChild);
            return;
        }

        if(this._multiplosComm_ == oldChild)
        {
            setMultiplosComm((PMultiplosComm) newChild);
            return;
        }

        if(this._fimPara_ == oldChild)
        {
            setFimPara((PFimPara) newChild);
            return;
        }

        if(this._pontoVirgula_ == oldChild)
        {
            setPontoVirgula((TPontoVirgula) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
