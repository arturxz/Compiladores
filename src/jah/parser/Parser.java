/* This file was generated by SableCC (http://www.sablecc.org/). */

package jah.parser;

import jah.lexer.*;
import jah.node.*;
import jah.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList<Object> nodeList;

    private final Lexer lexer;
    private final ListIterator<Object> stack = new LinkedList<Object>().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    protected void filter() throws ParserException, LexerException, IOException
    {
        // Empty body
    }

    private void push(int numstate, ArrayList<Object> listNode, boolean hidden) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!hidden)
        {
            filter();
        }

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            // int middle = (low + high) / 2;
            int middle = (low + high) >>> 1;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList<Object> pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null, true);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList<Object> list = new ArrayList<Object>();
		        list.add(this.lexer.next());
                        push(this.action[1], list, false);
                    }
		    break;
                case REDUCE:
                    {
                        int reduction = this.action[1];
                        if(reduction < 500) reduce_0(reduction);
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PPgrInicio node1 = (PPgrInicio) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }

    private void reduce_0(int reduction) throws IOException, LexerException, ParserException
    {
        switch(reduction)
        {
            case 0: /* reduce APgrInicio */
            {
                ArrayList<Object> list = new0();
                push(goTo(0), list, false);
            }
            break;
            case 1: /* reduce AComDeclPgrDeclParte */
            {
                ArrayList<Object> list = new1();
                push(goTo(1), list, false);
            }
            break;
            case 2: /* reduce ASemDeclPgrDeclParte */
            {
                ArrayList<Object> list = new2();
                push(goTo(1), list, false);
            }
            break;
            case 3: /* reduce AComCommPgrCommParte */
            {
                ArrayList<Object> list = new3();
                push(goTo(2), list, false);
            }
            break;
            case 4: /* reduce ASemCommPgrCommParte */
            {
                ArrayList<Object> list = new4();
                push(goTo(2), list, false);
            }
            break;
            case 5: /* reduce APgrFinal */
            {
                ArrayList<Object> list = new5();
                push(goTo(3), list, false);
            }
            break;
            case 6: /* reduce AVariavelDecl */
            {
                ArrayList<Object> list = new6();
                push(goTo(4), list, false);
            }
            break;
            case 7: /* reduce AConstanteDecl */
            {
                ArrayList<Object> list = new7();
                push(goTo(4), list, false);
            }
            break;
            case 8: /* reduce AComVirgulaPosDecl */
            {
                ArrayList<Object> list = new8();
                push(goTo(5), list, false);
            }
            break;
            case 9: /* reduce ASemVirgulaPosDecl */
            {
                ArrayList<Object> list = new9();
                push(goTo(5), list, false);
            }
            break;
            case 10: /* reduce ARealTipo */
            {
                ArrayList<Object> list = new10();
                push(goTo(6), list, false);
            }
            break;
            case 11: /* reduce AInteiroTipo */
            {
                ArrayList<Object> list = new11();
                push(goTo(6), list, false);
            }
            break;
            case 12: /* reduce AStringTipo */
            {
                ArrayList<Object> list = new12();
                push(goTo(6), list, false);
            }
            break;
            case 13: /* reduce ANormalVar */
            {
                ArrayList<Object> list = new13();
                push(goTo(7), list, false);
            }
            break;
            case 14: /* reduce AArrayVar */
            {
                ArrayList<Object> list = new14();
                push(goTo(7), list, false);
            }
            break;
            case 15: /* reduce AStringValor */
            {
                ArrayList<Object> list = new15();
                push(goTo(8), list, false);
            }
            break;
            case 16: /* reduce AInteiroValor */
            {
                ArrayList<Object> list = new16();
                push(goTo(8), list, false);
            }
            break;
            case 17: /* reduce ARealValor */
            {
                ArrayList<Object> list = new17();
                push(goTo(8), list, false);
            }
            break;
            case 18: /* reduce AMaisComandosComandos */
            {
                ArrayList<Object> list = new18();
                push(goTo(9), list, false);
            }
            break;
            case 19: /* reduce AComandoVazioComandos */
            {
                ArrayList<Object> list = new19();
                push(goTo(9), list, false);
            }
            break;
            case 20: /* reduce ASimplesComm */
            {
                ArrayList<Object> list = new20();
                push(goTo(10), list, false);
            }
            break;
            case 21: /* reduce ALeiaComm */
            {
                ArrayList<Object> list = new21();
                push(goTo(10), list, false);
            }
            break;
            case 22: /* reduce AEscrevaComm */
            {
                ArrayList<Object> list = new22();
                push(goTo(10), list, false);
            }
            break;
            case 23: /* reduce ASeComm */
            {
                ArrayList<Object> list = new23();
                push(goTo(10), list, false);
            }
            break;
            case 24: /* reduce AAvalieComm */
            {
                ArrayList<Object> list = new24();
                push(goTo(10), list, false);
            }
            break;
            case 25: /* reduce AEnquantoComm */
            {
                ArrayList<Object> list = new25();
                push(goTo(10), list, false);
            }
            break;
            case 26: /* reduce ARepitaComm */
            {
                ArrayList<Object> list = new26();
                push(goTo(10), list, false);
            }
            break;
            case 27: /* reduce AParaComm */
            {
                ArrayList<Object> list = new27();
                push(goTo(10), list, false);
            }
            break;
            case 28: /* reduce ACommLeia */
            {
                ArrayList<Object> list = new28();
                push(goTo(11), list, false);
            }
            break;
            case 29: /* reduce AVariosExpCommLeiaSegundaParte */
            {
                ArrayList<Object> list = new29();
                push(goTo(12), list, false);
            }
            break;
            case 30: /* reduce AUmExpCommLeiaSegundaParte */
            {
                ArrayList<Object> list = new30();
                push(goTo(12), list, false);
            }
            break;
            case 31: /* reduce ACommLeiaTerceiraParte */
            {
                ArrayList<Object> list = new31();
                push(goTo(13), list, false);
            }
            break;
            case 32: /* reduce ACommEscreva */
            {
                ArrayList<Object> list = new32();
                push(goTo(14), list, false);
            }
            break;
            case 33: /* reduce AVariosExpCommEscrevaSegundaParte */
            {
                ArrayList<Object> list = new33();
                push(goTo(15), list, false);
            }
            break;
            case 34: /* reduce AUmExpCommEscrevaSegundaParte */
            {
                ArrayList<Object> list = new34();
                push(goTo(15), list, false);
            }
            break;
            case 35: /* reduce ACommEscrevaTerceiraParte */
            {
                ArrayList<Object> list = new35();
                push(goTo(16), list, false);
            }
            break;
            case 36: /* reduce AAcommse1CommSe */
            {
                ArrayList<Object> list = new36();
                push(goTo(17), list, false);
            }
            break;
            case 37: /* reduce AAcommse2CommSe */
            {
                ArrayList<Object> list = new37();
                push(goTo(17), list, false);
            }
            break;
            case 38: /* reduce ACommSeSenao */
            {
                ArrayList<Object> list = new38();
                push(goTo(18), list, false);
            }
            break;
            case 39: /* reduce ACommSeFim */
            {
                ArrayList<Object> list = new39();
                push(goTo(19), list, false);
            }
            break;
            case 40: /* reduce ACommAvalie */
            {
                ArrayList<Object> list = new40();
                push(goTo(20), list, false);
            }
            break;
            case 41: /* reduce AComCasoCommAvalieCasoParte */
            {
                ArrayList<Object> list = new41();
                push(goTo(21), list, false);
            }
            break;
            case 42: /* reduce ASemCasoCommAvalieCasoParte */
            {
                ArrayList<Object> list = new42();
                push(goTo(21), list, false);
            }
            break;
            case 43: /* reduce AComSenaoCommAvalieSenaoParte */
            {
                ArrayList<Object> list = new43();
                push(goTo(22), list, false);
            }
            break;
            case 44: /* reduce ASemSenaoCommAvalieSenaoParte */
            {
                ArrayList<Object> list = new44();
                push(goTo(22), list, false);
            }
            break;
            case 45: /* reduce ACommAvalieFim */
            {
                ArrayList<Object> list = new45();
                push(goTo(23), list, false);
            }
            break;
            case 46: /* reduce ACommEnquanto */
            {
                ArrayList<Object> list = new46();
                push(goTo(24), list, false);
            }
            break;
            case 47: /* reduce ACommEnquantoFim */
            {
                ArrayList<Object> list = new47();
                push(goTo(25), list, false);
            }
            break;
            case 48: /* reduce ACommRepita */
            {
                ArrayList<Object> list = new48();
                push(goTo(26), list, false);
            }
            break;
            case 49: /* reduce ACommRepitaComandosParte */
            {
                ArrayList<Object> list = new49();
                push(goTo(27), list, false);
            }
            break;
            case 50: /* reduce ACommRepitaCondicaoParte */
            {
                ArrayList<Object> list = new50();
                push(goTo(28), list, false);
            }
            break;
            case 51: /* reduce ACommPara */
            {
                ArrayList<Object> list = new51();
                push(goTo(29), list, false);
            }
            break;
            case 52: /* reduce AComPassoCommParaPassa */
            {
                ArrayList<Object> list = new52();
                push(goTo(30), list, false);
            }
            break;
            case 53: /* reduce ASemPassoCommParaPassa */
            {
                ArrayList<Object> list = new53();
                push(goTo(30), list, false);
            }
            break;
            case 54: /* reduce ACommParaAte */
            {
                ArrayList<Object> list = new54();
                push(goTo(31), list, false);
            }
            break;
            case 55: /* reduce ACommParaMeio */
            {
                ArrayList<Object> list = new55();
                push(goTo(32), list, false);
            }
            break;
            case 56: /* reduce ACommParaFim */
            {
                ArrayList<Object> list = new56();
                push(goTo(33), list, false);
            }
            break;
            case 57: /* reduce AOperacaoExp */
            {
                ArrayList<Object> list = new57();
                push(goTo(34), list, false);
            }
            break;
            case 58: /* reduce AProximoExp */
            {
                ArrayList<Object> list = new58();
                push(goTo(34), list, false);
            }
            break;
            case 59: /* reduce AOperacaoTermo */
            {
                ArrayList<Object> list = new59();
                push(goTo(35), list, false);
            }
            break;
            case 60: /* reduce AProximoTermo */
            {
                ArrayList<Object> list = new60();
                push(goTo(35), list, false);
            }
            break;
            case 61: /* reduce AParentesisFator */
            {
                ArrayList<Object> list = new61();
                push(goTo(36), list, false);
            }
            break;
            case 62: /* reduce ASubstituiIdFator */
            {
                ArrayList<Object> list = new62();
                push(goTo(36), list, false);
            }
            break;
            case 63: /* reduce ASubstituiValorFator */
            {
                ArrayList<Object> list = new63();
                push(goTo(36), list, false);
            }
            break;
            case 64: /* reduce AFazCompExpLogica */
            {
                ArrayList<Object> list = new64();
                push(goTo(37), list, false);
            }
            break;
            case 65: /* reduce ADesigualExpLogica */
            {
                ArrayList<Object> list = new65();
                push(goTo(37), list, false);
            }
            break;
            case 66: /* reduce AFazDesDesLogica */
            {
                ArrayList<Object> list = new66();
                push(goTo(38), list, false);
            }
            break;
            case 67: /* reduce AOprsDesLogica */
            {
                ArrayList<Object> list = new67();
                push(goTo(38), list, false);
            }
            break;
            case 68: /* reduce AOpLogicoOprLogica */
            {
                ArrayList<Object> list = new68();
                push(goTo(39), list, false);
            }
            break;
            case 69: /* reduce AFinalizaOprLogica */
            {
                ArrayList<Object> list = new69();
                push(goTo(39), list, false);
            }
            break;
            case 70: /* reduce AParentesisFimLogica */
            {
                ArrayList<Object> list = new70();
                push(goTo(40), list, false);
            }
            break;
            case 71: /* reduce ASubstituiVarFimLogica */
            {
                ArrayList<Object> list = new71();
                push(goTo(40), list, false);
            }
            break;
            case 72: /* reduce ASubstituiValorFimLogica */
            {
                ArrayList<Object> list = new72();
                push(goTo(40), list, false);
            }
            break;
            case 73: /* reduce ASomaExpAritPriUm */
            {
                ArrayList<Object> list = new73();
                push(goTo(41), list, false);
            }
            break;
            case 74: /* reduce ASubtracaoExpAritPriUm */
            {
                ArrayList<Object> list = new74();
                push(goTo(41), list, false);
            }
            break;
            case 75: /* reduce AMultiplicacaoExpAritPriDois */
            {
                ArrayList<Object> list = new75();
                push(goTo(42), list, false);
            }
            break;
            case 76: /* reduce ADivisaoExpAritPriDois */
            {
                ArrayList<Object> list = new76();
                push(goTo(42), list, false);
            }
            break;
            case 77: /* reduce ALogicoExpAritPriDois */
            {
                ArrayList<Object> list = new77();
                push(goTo(42), list, false);
            }
            break;
            case 78: /* reduce AIgualExpLogPriUm */
            {
                ArrayList<Object> list = new78();
                push(goTo(43), list, false);
            }
            break;
            case 79: /* reduce ADiferenteExpLogPriUm */
            {
                ArrayList<Object> list = new79();
                push(goTo(43), list, false);
            }
            break;
            case 80: /* reduce AMenorExpLogPriDois */
            {
                ArrayList<Object> list = new80();
                push(goTo(44), list, false);
            }
            break;
            case 81: /* reduce AMenorigualExpLogPriDois */
            {
                ArrayList<Object> list = new81();
                push(goTo(44), list, false);
            }
            break;
            case 82: /* reduce AMaiorExpLogPriDois */
            {
                ArrayList<Object> list = new82();
                push(goTo(44), list, false);
            }
            break;
            case 83: /* reduce AMaiorigualExpLogPriDois */
            {
                ArrayList<Object> list = new83();
                push(goTo(44), list, false);
            }
            break;
            case 84: /* reduce ANotExpLogPriTres */
            {
                ArrayList<Object> list = new84();
                push(goTo(45), list, false);
            }
            break;
            case 85: /* reduce AAndExpLogPriTres */
            {
                ArrayList<Object> list = new85();
                push(goTo(45), list, false);
            }
            break;
            case 86: /* reduce AOrExpLogPriTres */
            {
                ArrayList<Object> list = new86();
                push(goTo(45), list, false);
            }
            break;
            case 87: /* reduce AXorExpLogPriTres */
            {
                ArrayList<Object> list = new87();
                push(goTo(45), list, false);
            }
            break;
        }
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new0() /* reduce APgrInicio */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPgrInicio ppgrinicioNode1;
        {
            // Block
        TPrograma tprogramaNode2;
        TId tidNode3;
        TInicio tinicioNode4;
        PPgrDeclParte ppgrdeclparteNode5;
        tprogramaNode2 = (TPrograma)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);
        tinicioNode4 = (TInicio)nodeArrayList3.get(0);
        ppgrdeclparteNode5 = (PPgrDeclParte)nodeArrayList4.get(0);

        ppgrinicioNode1 = new APgrInicio(tprogramaNode2, tidNode3, tinicioNode4, ppgrdeclparteNode5);
        }
	nodeList.add(ppgrinicioNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new1() /* reduce AComDeclPgrDeclParte */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPgrDeclParte ppgrdeclparteNode1;
        {
            // Block
        PDecl pdeclNode2;
        PPgrDeclParte ppgrdeclparteNode3;
        pdeclNode2 = (PDecl)nodeArrayList1.get(0);
        ppgrdeclparteNode3 = (PPgrDeclParte)nodeArrayList2.get(0);

        ppgrdeclparteNode1 = new AComDeclPgrDeclParte(pdeclNode2, ppgrdeclparteNode3);
        }
	nodeList.add(ppgrdeclparteNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new2() /* reduce ASemDeclPgrDeclParte */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPgrDeclParte ppgrdeclparteNode1;
        {
            // Block
        PPgrCommParte ppgrcommparteNode2;
        ppgrcommparteNode2 = (PPgrCommParte)nodeArrayList1.get(0);

        ppgrdeclparteNode1 = new ASemDeclPgrDeclParte(ppgrcommparteNode2);
        }
	nodeList.add(ppgrdeclparteNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new3() /* reduce AComCommPgrCommParte */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPgrCommParte ppgrcommparteNode1;
        {
            // Block
        PComm pcommNode2;
        PPgrCommParte ppgrcommparteNode3;
        pcommNode2 = (PComm)nodeArrayList1.get(0);
        ppgrcommparteNode3 = (PPgrCommParte)nodeArrayList2.get(0);

        ppgrcommparteNode1 = new AComCommPgrCommParte(pcommNode2, ppgrcommparteNode3);
        }
	nodeList.add(ppgrcommparteNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new4() /* reduce ASemCommPgrCommParte */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPgrCommParte ppgrcommparteNode1;
        {
            // Block
        PPgrFinal ppgrfinalNode2;
        ppgrfinalNode2 = (PPgrFinal)nodeArrayList1.get(0);

        ppgrcommparteNode1 = new ASemCommPgrCommParte(ppgrfinalNode2);
        }
	nodeList.add(ppgrcommparteNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new5() /* reduce APgrFinal */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPgrFinal ppgrfinalNode1;
        {
            // Block
        TFimPrograma tfimprogramaNode2;
        tfimprogramaNode2 = (TFimPrograma)nodeArrayList1.get(0);

        ppgrfinalNode1 = new APgrFinal(tfimprogramaNode2);
        }
	nodeList.add(ppgrfinalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new6() /* reduce AVariavelDecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecl pdeclNode1;
        {
            // Block
        PTipo ptipoNode2;
        TDoisPontos tdoispontosNode3;
        PPosDecl pposdeclNode4;
        TPontoVirgula tpontovirgulaNode5;
        ptipoNode2 = (PTipo)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoisPontos)nodeArrayList2.get(0);
        pposdeclNode4 = (PPosDecl)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontoVirgula)nodeArrayList4.get(0);

        pdeclNode1 = new AVariavelDecl(ptipoNode2, tdoispontosNode3, pposdeclNode4, tpontovirgulaNode5);
        }
	nodeList.add(pdeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new7() /* reduce AConstanteDecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecl pdeclNode1;
        {
            // Block
        TConstante tconstanteNode2;
        TId tidNode3;
        PValor pvalorNode4;
        TPontoVirgula tpontovirgulaNode5;
        tconstanteNode2 = (TConstante)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);
        pvalorNode4 = (PValor)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontoVirgula)nodeArrayList4.get(0);

        pdeclNode1 = new AConstanteDecl(tconstanteNode2, tidNode3, pvalorNode4, tpontovirgulaNode5);
        }
	nodeList.add(pdeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new8() /* reduce AComVirgulaPosDecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPosDecl pposdeclNode1;
        {
            // Block
        PVar pvarNode2;
        TVirgula tvirgulaNode3;
        PPosDecl pposdeclNode4;
        pvarNode2 = (PVar)nodeArrayList1.get(0);
        tvirgulaNode3 = (TVirgula)nodeArrayList2.get(0);
        pposdeclNode4 = (PPosDecl)nodeArrayList3.get(0);

        pposdeclNode1 = new AComVirgulaPosDecl(pvarNode2, tvirgulaNode3, pposdeclNode4);
        }
	nodeList.add(pposdeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new9() /* reduce ASemVirgulaPosDecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPosDecl pposdeclNode1;
        {
            // Block
        PVar pvarNode2;
        pvarNode2 = (PVar)nodeArrayList1.get(0);

        pposdeclNode1 = new ASemVirgulaPosDecl(pvarNode2);
        }
	nodeList.add(pposdeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new10() /* reduce ARealTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TTipoReal ttiporealNode2;
        ttiporealNode2 = (TTipoReal)nodeArrayList1.get(0);

        ptipoNode1 = new ARealTipo(ttiporealNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new11() /* reduce AInteiroTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TTipoInteiro ttipointeiroNode2;
        ttipointeiroNode2 = (TTipoInteiro)nodeArrayList1.get(0);

        ptipoNode1 = new AInteiroTipo(ttipointeiroNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new12() /* reduce AStringTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TTipoString ttipostringNode2;
        ttipostringNode2 = (TTipoString)nodeArrayList1.get(0);

        ptipoNode1 = new AStringTipo(ttipostringNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new13() /* reduce ANormalVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVar pvarNode1;
        {
            // Block
        TId tidNode2;
        tidNode2 = (TId)nodeArrayList1.get(0);

        pvarNode1 = new ANormalVar(tidNode2);
        }
	nodeList.add(pvarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new14() /* reduce AArrayVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVar pvarNode1;
        {
            // Block
        TId tidNode2;
        TAbreColchetes tabrecolchetesNode3;
        TInteiro tinteiroNode4;
        TFechaColchetes tfechacolchetesNode5;
        tidNode2 = (TId)nodeArrayList1.get(0);
        tabrecolchetesNode3 = (TAbreColchetes)nodeArrayList2.get(0);
        tinteiroNode4 = (TInteiro)nodeArrayList3.get(0);
        tfechacolchetesNode5 = (TFechaColchetes)nodeArrayList4.get(0);

        pvarNode1 = new AArrayVar(tidNode2, tabrecolchetesNode3, tinteiroNode4, tfechacolchetesNode5);
        }
	nodeList.add(pvarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new15() /* reduce AStringValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TString tstringNode2;
        tstringNode2 = (TString)nodeArrayList1.get(0);

        pvalorNode1 = new AStringValor(tstringNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new16() /* reduce AInteiroValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TInteiro tinteiroNode2;
        tinteiroNode2 = (TInteiro)nodeArrayList1.get(0);

        pvalorNode1 = new AInteiroValor(tinteiroNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new17() /* reduce ARealValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TReal trealNode2;
        trealNode2 = (TReal)nodeArrayList1.get(0);

        pvalorNode1 = new ARealValor(trealNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new18() /* reduce AMaisComandosComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        PComm pcommNode2;
        PComandos pcomandosNode3;
        pcommNode2 = (PComm)nodeArrayList1.get(0);
        pcomandosNode3 = (PComandos)nodeArrayList2.get(0);

        pcomandosNode1 = new AMaisComandosComandos(pcommNode2, pcomandosNode3);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new19() /* reduce AComandoVazioComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PComandos pcomandosNode1;
        {
            // Block

        pcomandosNode1 = new AComandoVazioComandos();
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new20() /* reduce ASimplesComm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComm pcommNode1;
        {
            // Block
        PVar pvarNode2;
        TAtribuicao tatribuicaoNode3;
        PExp pexpNode4;
        TPontoVirgula tpontovirgulaNode5;
        pvarNode2 = (PVar)nodeArrayList1.get(0);
        tatribuicaoNode3 = (TAtribuicao)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontoVirgula)nodeArrayList4.get(0);

        pcommNode1 = new ASimplesComm(pvarNode2, tatribuicaoNode3, pexpNode4, tpontovirgulaNode5);
        }
	nodeList.add(pcommNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new21() /* reduce ALeiaComm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComm pcommNode1;
        {
            // Block
        PCommLeia pcommleiaNode2;
        pcommleiaNode2 = (PCommLeia)nodeArrayList1.get(0);

        pcommNode1 = new ALeiaComm(pcommleiaNode2);
        }
	nodeList.add(pcommNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new22() /* reduce AEscrevaComm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComm pcommNode1;
        {
            // Block
        PCommEscreva pcommescrevaNode2;
        pcommescrevaNode2 = (PCommEscreva)nodeArrayList1.get(0);

        pcommNode1 = new AEscrevaComm(pcommescrevaNode2);
        }
	nodeList.add(pcommNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new23() /* reduce ASeComm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComm pcommNode1;
        {
            // Block
        PCommSe pcommseNode2;
        pcommseNode2 = (PCommSe)nodeArrayList1.get(0);

        pcommNode1 = new ASeComm(pcommseNode2);
        }
	nodeList.add(pcommNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new24() /* reduce AAvalieComm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComm pcommNode1;
        {
            // Block
        PCommAvalie pcommavalieNode2;
        pcommavalieNode2 = (PCommAvalie)nodeArrayList1.get(0);

        pcommNode1 = new AAvalieComm(pcommavalieNode2);
        }
	nodeList.add(pcommNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new25() /* reduce AEnquantoComm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComm pcommNode1;
        {
            // Block
        PCommEnquanto pcommenquantoNode2;
        pcommenquantoNode2 = (PCommEnquanto)nodeArrayList1.get(0);

        pcommNode1 = new AEnquantoComm(pcommenquantoNode2);
        }
	nodeList.add(pcommNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new26() /* reduce ARepitaComm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComm pcommNode1;
        {
            // Block
        PCommRepita pcommrepitaNode2;
        pcommrepitaNode2 = (PCommRepita)nodeArrayList1.get(0);

        pcommNode1 = new ARepitaComm(pcommrepitaNode2);
        }
	nodeList.add(pcommNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new27() /* reduce AParaComm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComm pcommNode1;
        {
            // Block
        PCommPara pcommparaNode2;
        pcommparaNode2 = (PCommPara)nodeArrayList1.get(0);

        pcommNode1 = new AParaComm(pcommparaNode2);
        }
	nodeList.add(pcommNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new28() /* reduce ACommLeia */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCommLeia pcommleiaNode1;
        {
            // Block
        TLeia tleiaNode2;
        TAbreParentesis tabreparentesisNode3;
        PCommLeiaSegundaParte pcommleiasegundaparteNode4;
        tleiaNode2 = (TLeia)nodeArrayList1.get(0);
        tabreparentesisNode3 = (TAbreParentesis)nodeArrayList2.get(0);
        pcommleiasegundaparteNode4 = (PCommLeiaSegundaParte)nodeArrayList3.get(0);

        pcommleiaNode1 = new ACommLeia(tleiaNode2, tabreparentesisNode3, pcommleiasegundaparteNode4);
        }
	nodeList.add(pcommleiaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new29() /* reduce AVariosExpCommLeiaSegundaParte */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCommLeiaSegundaParte pcommleiasegundaparteNode1;
        {
            // Block
        PExp pexpNode2;
        TVirgula tvirgulaNode3;
        PCommLeiaSegundaParte pcommleiasegundaparteNode4;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        tvirgulaNode3 = (TVirgula)nodeArrayList2.get(0);
        pcommleiasegundaparteNode4 = (PCommLeiaSegundaParte)nodeArrayList3.get(0);

        pcommleiasegundaparteNode1 = new AVariosExpCommLeiaSegundaParte(pexpNode2, tvirgulaNode3, pcommleiasegundaparteNode4);
        }
	nodeList.add(pcommleiasegundaparteNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new30() /* reduce AUmExpCommLeiaSegundaParte */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCommLeiaSegundaParte pcommleiasegundaparteNode1;
        {
            // Block
        PExp pexpNode2;
        PCommLeiaTerceiraParte pcommleiaterceiraparteNode3;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        pcommleiaterceiraparteNode3 = (PCommLeiaTerceiraParte)nodeArrayList2.get(0);

        pcommleiasegundaparteNode1 = new AUmExpCommLeiaSegundaParte(pexpNode2, pcommleiaterceiraparteNode3);
        }
	nodeList.add(pcommleiasegundaparteNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new31() /* reduce ACommLeiaTerceiraParte */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCommLeiaTerceiraParte pcommleiaterceiraparteNode1;
        {
            // Block
        TFechaParentesis tfechaparentesisNode2;
        TPontoVirgula tpontovirgulaNode3;
        tfechaparentesisNode2 = (TFechaParentesis)nodeArrayList1.get(0);
        tpontovirgulaNode3 = (TPontoVirgula)nodeArrayList2.get(0);

        pcommleiaterceiraparteNode1 = new ACommLeiaTerceiraParte(tfechaparentesisNode2, tpontovirgulaNode3);
        }
	nodeList.add(pcommleiaterceiraparteNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new32() /* reduce ACommEscreva */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCommEscreva pcommescrevaNode1;
        {
            // Block
        TEscreva tescrevaNode2;
        TAbreParentesis tabreparentesisNode3;
        PCommEscrevaSegundaParte pcommescrevasegundaparteNode4;
        tescrevaNode2 = (TEscreva)nodeArrayList1.get(0);
        tabreparentesisNode3 = (TAbreParentesis)nodeArrayList2.get(0);
        pcommescrevasegundaparteNode4 = (PCommEscrevaSegundaParte)nodeArrayList3.get(0);

        pcommescrevaNode1 = new ACommEscreva(tescrevaNode2, tabreparentesisNode3, pcommescrevasegundaparteNode4);
        }
	nodeList.add(pcommescrevaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new33() /* reduce AVariosExpCommEscrevaSegundaParte */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCommEscrevaSegundaParte pcommescrevasegundaparteNode1;
        {
            // Block
        PExp pexpNode2;
        TVirgula tvirgulaNode3;
        PCommEscrevaSegundaParte pcommescrevasegundaparteNode4;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        tvirgulaNode3 = (TVirgula)nodeArrayList2.get(0);
        pcommescrevasegundaparteNode4 = (PCommEscrevaSegundaParte)nodeArrayList3.get(0);

        pcommescrevasegundaparteNode1 = new AVariosExpCommEscrevaSegundaParte(pexpNode2, tvirgulaNode3, pcommescrevasegundaparteNode4);
        }
	nodeList.add(pcommescrevasegundaparteNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new34() /* reduce AUmExpCommEscrevaSegundaParte */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCommEscrevaSegundaParte pcommescrevasegundaparteNode1;
        {
            // Block
        PExp pexpNode2;
        PCommEscrevaTerceiraParte pcommescrevaterceiraparteNode3;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        pcommescrevaterceiraparteNode3 = (PCommEscrevaTerceiraParte)nodeArrayList2.get(0);

        pcommescrevasegundaparteNode1 = new AUmExpCommEscrevaSegundaParte(pexpNode2, pcommescrevaterceiraparteNode3);
        }
	nodeList.add(pcommescrevasegundaparteNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new35() /* reduce ACommEscrevaTerceiraParte */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCommEscrevaTerceiraParte pcommescrevaterceiraparteNode1;
        {
            // Block
        TFechaParentesis tfechaparentesisNode2;
        TPontoVirgula tpontovirgulaNode3;
        tfechaparentesisNode2 = (TFechaParentesis)nodeArrayList1.get(0);
        tpontovirgulaNode3 = (TPontoVirgula)nodeArrayList2.get(0);

        pcommescrevaterceiraparteNode1 = new ACommEscrevaTerceiraParte(tfechaparentesisNode2, tpontovirgulaNode3);
        }
	nodeList.add(pcommescrevaterceiraparteNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new36() /* reduce AAcommse1CommSe */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCommSe pcommseNode1;
        {
            // Block
        TSe tseNode2;
        TAbreParentesis tabreparentesisNode3;
        PExpLogica pexplogicaNode4;
        TFechaParentesis tfechaparentesisNode5;
        TEntao tentaoNode6;
        PComandos pcomandosNode7;
        @SuppressWarnings("unused") Object nullNode8 = null;
        PCommSeFim pcommsefimNode9;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tabreparentesisNode3 = (TAbreParentesis)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tfechaparentesisNode5 = (TFechaParentesis)nodeArrayList4.get(0);
        tentaoNode6 = (TEntao)nodeArrayList5.get(0);
        pcomandosNode7 = (PComandos)nodeArrayList6.get(0);
        pcommsefimNode9 = (PCommSeFim)nodeArrayList7.get(0);

        pcommseNode1 = new ACommSe(tseNode2, tabreparentesisNode3, pexplogicaNode4, tfechaparentesisNode5, tentaoNode6, pcomandosNode7, null, pcommsefimNode9);
        }
	nodeList.add(pcommseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new37() /* reduce AAcommse2CommSe */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCommSe pcommseNode1;
        {
            // Block
        TSe tseNode2;
        TAbreParentesis tabreparentesisNode3;
        PExpLogica pexplogicaNode4;
        TFechaParentesis tfechaparentesisNode5;
        TEntao tentaoNode6;
        PComandos pcomandosNode7;
        PCommSeSenao pcommsesenaoNode8;
        PCommSeFim pcommsefimNode9;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tabreparentesisNode3 = (TAbreParentesis)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tfechaparentesisNode5 = (TFechaParentesis)nodeArrayList4.get(0);
        tentaoNode6 = (TEntao)nodeArrayList5.get(0);
        pcomandosNode7 = (PComandos)nodeArrayList6.get(0);
        pcommsesenaoNode8 = (PCommSeSenao)nodeArrayList7.get(0);
        pcommsefimNode9 = (PCommSeFim)nodeArrayList8.get(0);

        pcommseNode1 = new ACommSe(tseNode2, tabreparentesisNode3, pexplogicaNode4, tfechaparentesisNode5, tentaoNode6, pcomandosNode7, pcommsesenaoNode8, pcommsefimNode9);
        }
	nodeList.add(pcommseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new38() /* reduce ACommSeSenao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCommSeSenao pcommsesenaoNode1;
        {
            // Block
        TSenao tsenaoNode2;
        PComandos pcomandosNode3;
        tsenaoNode2 = (TSenao)nodeArrayList1.get(0);
        pcomandosNode3 = (PComandos)nodeArrayList2.get(0);

        pcommsesenaoNode1 = new ACommSeSenao(tsenaoNode2, pcomandosNode3);
        }
	nodeList.add(pcommsesenaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new39() /* reduce ACommSeFim */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCommSeFim pcommsefimNode1;
        {
            // Block
        TFim tfimNode2;
        TSe tseNode3;
        TPontoVirgula tpontovirgulaNode4;
        tfimNode2 = (TFim)nodeArrayList1.get(0);
        tseNode3 = (TSe)nodeArrayList2.get(0);
        tpontovirgulaNode4 = (TPontoVirgula)nodeArrayList3.get(0);

        pcommsefimNode1 = new ACommSeFim(tfimNode2, tseNode3, tpontovirgulaNode4);
        }
	nodeList.add(pcommsefimNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new40() /* reduce ACommAvalie */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCommAvalie pcommavalieNode1;
        {
            // Block
        TAvalie tavalieNode2;
        TAbreParentesis tabreparentesisNode3;
        PExp pexpNode4;
        TFechaParentesis tfechaparentesisNode5;
        PCommAvalieCasoParte pcommavaliecasoparteNode6;
        tavalieNode2 = (TAvalie)nodeArrayList1.get(0);
        tabreparentesisNode3 = (TAbreParentesis)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tfechaparentesisNode5 = (TFechaParentesis)nodeArrayList4.get(0);
        pcommavaliecasoparteNode6 = (PCommAvalieCasoParte)nodeArrayList5.get(0);

        pcommavalieNode1 = new ACommAvalie(tavalieNode2, tabreparentesisNode3, pexpNode4, tfechaparentesisNode5, pcommavaliecasoparteNode6);
        }
	nodeList.add(pcommavalieNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new41() /* reduce AComCasoCommAvalieCasoParte */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCommAvalieCasoParte pcommavaliecasoparteNode1;
        {
            // Block
        TCaso tcasoNode2;
        PValor pvalorNode3;
        TDoisPontos tdoispontosNode4;
        PComandos pcomandosNode5;
        PCommAvalieCasoParte pcommavaliecasoparteNode6;
        tcasoNode2 = (TCaso)nodeArrayList1.get(0);
        pvalorNode3 = (PValor)nodeArrayList2.get(0);
        tdoispontosNode4 = (TDoisPontos)nodeArrayList3.get(0);
        pcomandosNode5 = (PComandos)nodeArrayList4.get(0);
        pcommavaliecasoparteNode6 = (PCommAvalieCasoParte)nodeArrayList5.get(0);

        pcommavaliecasoparteNode1 = new AComCasoCommAvalieCasoParte(tcasoNode2, pvalorNode3, tdoispontosNode4, pcomandosNode5, pcommavaliecasoparteNode6);
        }
	nodeList.add(pcommavaliecasoparteNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new42() /* reduce ASemCasoCommAvalieCasoParte */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCommAvalieCasoParte pcommavaliecasoparteNode1;
        {
            // Block
        PCommAvalieSenaoParte pcommavaliesenaoparteNode2;
        pcommavaliesenaoparteNode2 = (PCommAvalieSenaoParte)nodeArrayList1.get(0);

        pcommavaliecasoparteNode1 = new ASemCasoCommAvalieCasoParte(pcommavaliesenaoparteNode2);
        }
	nodeList.add(pcommavaliecasoparteNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new43() /* reduce AComSenaoCommAvalieSenaoParte */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCommAvalieSenaoParte pcommavaliesenaoparteNode1;
        {
            // Block
        TSenao tsenaoNode2;
        TDoisPontos tdoispontosNode3;
        PComandos pcomandosNode4;
        PCommAvalieFim pcommavaliefimNode5;
        tsenaoNode2 = (TSenao)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoisPontos)nodeArrayList2.get(0);
        pcomandosNode4 = (PComandos)nodeArrayList3.get(0);
        pcommavaliefimNode5 = (PCommAvalieFim)nodeArrayList4.get(0);

        pcommavaliesenaoparteNode1 = new AComSenaoCommAvalieSenaoParte(tsenaoNode2, tdoispontosNode3, pcomandosNode4, pcommavaliefimNode5);
        }
	nodeList.add(pcommavaliesenaoparteNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new44() /* reduce ASemSenaoCommAvalieSenaoParte */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCommAvalieSenaoParte pcommavaliesenaoparteNode1;
        {
            // Block
        PCommAvalieFim pcommavaliefimNode2;
        pcommavaliefimNode2 = (PCommAvalieFim)nodeArrayList1.get(0);

        pcommavaliesenaoparteNode1 = new ASemSenaoCommAvalieSenaoParte(pcommavaliefimNode2);
        }
	nodeList.add(pcommavaliesenaoparteNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new45() /* reduce ACommAvalieFim */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCommAvalieFim pcommavaliefimNode1;
        {
            // Block
        TFim tfimNode2;
        TAvalie tavalieNode3;
        TPontoVirgula tpontovirgulaNode4;
        tfimNode2 = (TFim)nodeArrayList1.get(0);
        tavalieNode3 = (TAvalie)nodeArrayList2.get(0);
        tpontovirgulaNode4 = (TPontoVirgula)nodeArrayList3.get(0);

        pcommavaliefimNode1 = new ACommAvalieFim(tfimNode2, tavalieNode3, tpontovirgulaNode4);
        }
	nodeList.add(pcommavaliefimNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new46() /* reduce ACommEnquanto */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCommEnquanto pcommenquantoNode1;
        {
            // Block
        TEnquanto tenquantoNode2;
        TAbreParentesis tabreparentesisNode3;
        PExpLogica pexplogicaNode4;
        TFechaParentesis tfechaparentesisNode5;
        TFaca tfacaNode6;
        PComandos pcomandosNode7;
        PCommEnquantoFim pcommenquantofimNode8;
        tenquantoNode2 = (TEnquanto)nodeArrayList1.get(0);
        tabreparentesisNode3 = (TAbreParentesis)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tfechaparentesisNode5 = (TFechaParentesis)nodeArrayList4.get(0);
        tfacaNode6 = (TFaca)nodeArrayList5.get(0);
        pcomandosNode7 = (PComandos)nodeArrayList6.get(0);
        pcommenquantofimNode8 = (PCommEnquantoFim)nodeArrayList7.get(0);

        pcommenquantoNode1 = new ACommEnquanto(tenquantoNode2, tabreparentesisNode3, pexplogicaNode4, tfechaparentesisNode5, tfacaNode6, pcomandosNode7, pcommenquantofimNode8);
        }
	nodeList.add(pcommenquantoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new47() /* reduce ACommEnquantoFim */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCommEnquantoFim pcommenquantofimNode1;
        {
            // Block
        TFim tfimNode2;
        TEnquanto tenquantoNode3;
        TPontoVirgula tpontovirgulaNode4;
        tfimNode2 = (TFim)nodeArrayList1.get(0);
        tenquantoNode3 = (TEnquanto)nodeArrayList2.get(0);
        tpontovirgulaNode4 = (TPontoVirgula)nodeArrayList3.get(0);

        pcommenquantofimNode1 = new ACommEnquantoFim(tfimNode2, tenquantoNode3, tpontovirgulaNode4);
        }
	nodeList.add(pcommenquantofimNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new48() /* reduce ACommRepita */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCommRepita pcommrepitaNode1;
        {
            // Block
        TRepita trepitaNode2;
        PCommRepitaComandosParte pcommrepitacomandosparteNode3;
        trepitaNode2 = (TRepita)nodeArrayList1.get(0);
        pcommrepitacomandosparteNode3 = (PCommRepitaComandosParte)nodeArrayList2.get(0);

        pcommrepitaNode1 = new ACommRepita(trepitaNode2, pcommrepitacomandosparteNode3);
        }
	nodeList.add(pcommrepitaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new49() /* reduce ACommRepitaComandosParte */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCommRepitaComandosParte pcommrepitacomandosparteNode1;
        {
            // Block
        PComandos pcomandosNode2;
        TAte tateNode3;
        PCommRepitaCondicaoParte pcommrepitacondicaoparteNode4;
        pcomandosNode2 = (PComandos)nodeArrayList1.get(0);
        tateNode3 = (TAte)nodeArrayList2.get(0);
        pcommrepitacondicaoparteNode4 = (PCommRepitaCondicaoParte)nodeArrayList3.get(0);

        pcommrepitacomandosparteNode1 = new ACommRepitaComandosParte(pcomandosNode2, tateNode3, pcommrepitacondicaoparteNode4);
        }
	nodeList.add(pcommrepitacomandosparteNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new50() /* reduce ACommRepitaCondicaoParte */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCommRepitaCondicaoParte pcommrepitacondicaoparteNode1;
        {
            // Block
        TAbreParentesis tabreparentesisNode2;
        PExpLogica pexplogicaNode3;
        TFechaParentesis tfechaparentesisNode4;
        TPontoVirgula tpontovirgulaNode5;
        tabreparentesisNode2 = (TAbreParentesis)nodeArrayList1.get(0);
        pexplogicaNode3 = (PExpLogica)nodeArrayList2.get(0);
        tfechaparentesisNode4 = (TFechaParentesis)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontoVirgula)nodeArrayList4.get(0);

        pcommrepitacondicaoparteNode1 = new ACommRepitaCondicaoParte(tabreparentesisNode2, pexplogicaNode3, tfechaparentesisNode4, tpontovirgulaNode5);
        }
	nodeList.add(pcommrepitacondicaoparteNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new51() /* reduce ACommPara */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCommPara pcommparaNode1;
        {
            // Block
        TPara tparaNode2;
        PVar pvarNode3;
        TDe tdeNode4;
        TInteiro tinteiroNode5;
        PCommParaPassa pcommparapassaNode6;
        tparaNode2 = (TPara)nodeArrayList1.get(0);
        pvarNode3 = (PVar)nodeArrayList2.get(0);
        tdeNode4 = (TDe)nodeArrayList3.get(0);
        tinteiroNode5 = (TInteiro)nodeArrayList4.get(0);
        pcommparapassaNode6 = (PCommParaPassa)nodeArrayList5.get(0);

        pcommparaNode1 = new ACommPara(tparaNode2, pvarNode3, tdeNode4, tinteiroNode5, pcommparapassaNode6);
        }
	nodeList.add(pcommparaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new52() /* reduce AComPassoCommParaPassa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCommParaPassa pcommparapassaNode1;
        {
            // Block
        TPasso tpassoNode2;
        TInteiro tinteiroNode3;
        PCommParaAte pcommparaateNode4;
        tpassoNode2 = (TPasso)nodeArrayList1.get(0);
        tinteiroNode3 = (TInteiro)nodeArrayList2.get(0);
        pcommparaateNode4 = (PCommParaAte)nodeArrayList3.get(0);

        pcommparapassaNode1 = new AComPassoCommParaPassa(tpassoNode2, tinteiroNode3, pcommparaateNode4);
        }
	nodeList.add(pcommparapassaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new53() /* reduce ASemPassoCommParaPassa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCommParaPassa pcommparapassaNode1;
        {
            // Block
        PCommParaAte pcommparaateNode2;
        pcommparaateNode2 = (PCommParaAte)nodeArrayList1.get(0);

        pcommparapassaNode1 = new ASemPassoCommParaPassa(pcommparaateNode2);
        }
	nodeList.add(pcommparapassaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new54() /* reduce ACommParaAte */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCommParaAte pcommparaateNode1;
        {
            // Block
        TAte tateNode2;
        TInteiro tinteiroNode3;
        PCommParaMeio pcommparameioNode4;
        tateNode2 = (TAte)nodeArrayList1.get(0);
        tinteiroNode3 = (TInteiro)nodeArrayList2.get(0);
        pcommparameioNode4 = (PCommParaMeio)nodeArrayList3.get(0);

        pcommparaateNode1 = new ACommParaAte(tateNode2, tinteiroNode3, pcommparameioNode4);
        }
	nodeList.add(pcommparaateNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new55() /* reduce ACommParaMeio */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCommParaMeio pcommparameioNode1;
        {
            // Block
        TFaca tfacaNode2;
        PComandos pcomandosNode3;
        PCommParaFim pcommparafimNode4;
        tfacaNode2 = (TFaca)nodeArrayList1.get(0);
        pcomandosNode3 = (PComandos)nodeArrayList2.get(0);
        pcommparafimNode4 = (PCommParaFim)nodeArrayList3.get(0);

        pcommparameioNode1 = new ACommParaMeio(tfacaNode2, pcomandosNode3, pcommparafimNode4);
        }
	nodeList.add(pcommparameioNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new56() /* reduce ACommParaFim */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCommParaFim pcommparafimNode1;
        {
            // Block
        TFim tfimNode2;
        TPara tparaNode3;
        TPontoVirgula tpontovirgulaNode4;
        tfimNode2 = (TFim)nodeArrayList1.get(0);
        tparaNode3 = (TPara)nodeArrayList2.get(0);
        tpontovirgulaNode4 = (TPontoVirgula)nodeArrayList3.get(0);

        pcommparafimNode1 = new ACommParaFim(tfimNode2, tparaNode3, tpontovirgulaNode4);
        }
	nodeList.add(pcommparafimNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new57() /* reduce AOperacaoExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PTermo ptermoNode2;
        PExpAritPriUm pexparitpriumNode3;
        PExp pexpNode4;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);
        pexparitpriumNode3 = (PExpAritPriUm)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);

        pexpNode1 = new AOperacaoExp(ptermoNode2, pexparitpriumNode3, pexpNode4);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new58() /* reduce AProximoExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PTermo ptermoNode2;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);

        pexpNode1 = new AProximoExp(ptermoNode2);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new59() /* reduce AOperacaoTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PFator pfatorNode2;
        PExpAritPriDois pexparitpridoisNode3;
        PTermo ptermoNode4;
        pfatorNode2 = (PFator)nodeArrayList1.get(0);
        pexparitpridoisNode3 = (PExpAritPriDois)nodeArrayList2.get(0);
        ptermoNode4 = (PTermo)nodeArrayList3.get(0);

        ptermoNode1 = new AOperacaoTermo(pfatorNode2, pexparitpridoisNode3, ptermoNode4);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new60() /* reduce AProximoTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PFator pfatorNode2;
        pfatorNode2 = (PFator)nodeArrayList1.get(0);

        ptermoNode1 = new AProximoTermo(pfatorNode2);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new61() /* reduce AParentesisFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TAbreParentesis tabreparentesisNode2;
        PExp pexpNode3;
        TFechaParentesis tfechaparentesisNode4;
        tabreparentesisNode2 = (TAbreParentesis)nodeArrayList1.get(0);
        pexpNode3 = (PExp)nodeArrayList2.get(0);
        tfechaparentesisNode4 = (TFechaParentesis)nodeArrayList3.get(0);

        pfatorNode1 = new AParentesisFator(tabreparentesisNode2, pexpNode3, tfechaparentesisNode4);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new62() /* reduce ASubstituiIdFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        PVar pvarNode2;
        pvarNode2 = (PVar)nodeArrayList1.get(0);

        pfatorNode1 = new ASubstituiIdFator(pvarNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new63() /* reduce ASubstituiValorFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        PValor pvalorNode2;
        pvalorNode2 = (PValor)nodeArrayList1.get(0);

        pfatorNode1 = new ASubstituiValorFator(pvalorNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new64() /* reduce AFazCompExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PDesLogica pdeslogicaNode2;
        PExpLogPriUm pexplogpriumNode3;
        PExpLogica pexplogicaNode4;
        pdeslogicaNode2 = (PDesLogica)nodeArrayList1.get(0);
        pexplogpriumNode3 = (PExpLogPriUm)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);

        pexplogicaNode1 = new AFazCompExpLogica(pdeslogicaNode2, pexplogpriumNode3, pexplogicaNode4);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new65() /* reduce ADesigualExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PDesLogica pdeslogicaNode2;
        pdeslogicaNode2 = (PDesLogica)nodeArrayList1.get(0);

        pexplogicaNode1 = new ADesigualExpLogica(pdeslogicaNode2);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new66() /* reduce AFazDesDesLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDesLogica pdeslogicaNode1;
        {
            // Block
        POprLogica poprlogicaNode2;
        PExpLogPriDois pexplogpridoisNode3;
        PDesLogica pdeslogicaNode4;
        poprlogicaNode2 = (POprLogica)nodeArrayList1.get(0);
        pexplogpridoisNode3 = (PExpLogPriDois)nodeArrayList2.get(0);
        pdeslogicaNode4 = (PDesLogica)nodeArrayList3.get(0);

        pdeslogicaNode1 = new AFazDesDesLogica(poprlogicaNode2, pexplogpridoisNode3, pdeslogicaNode4);
        }
	nodeList.add(pdeslogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new67() /* reduce AOprsDesLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDesLogica pdeslogicaNode1;
        {
            // Block
        POprLogica poprlogicaNode2;
        poprlogicaNode2 = (POprLogica)nodeArrayList1.get(0);

        pdeslogicaNode1 = new AOprsDesLogica(poprlogicaNode2);
        }
	nodeList.add(pdeslogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new68() /* reduce AOpLogicoOprLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POprLogica poprlogicaNode1;
        {
            // Block
        PFimLogica pfimlogicaNode2;
        PExpLogPriTres pexplogpritresNode3;
        POprLogica poprlogicaNode4;
        pfimlogicaNode2 = (PFimLogica)nodeArrayList1.get(0);
        pexplogpritresNode3 = (PExpLogPriTres)nodeArrayList2.get(0);
        poprlogicaNode4 = (POprLogica)nodeArrayList3.get(0);

        poprlogicaNode1 = new AOpLogicoOprLogica(pfimlogicaNode2, pexplogpritresNode3, poprlogicaNode4);
        }
	nodeList.add(poprlogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new69() /* reduce AFinalizaOprLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POprLogica poprlogicaNode1;
        {
            // Block
        PFimLogica pfimlogicaNode2;
        pfimlogicaNode2 = (PFimLogica)nodeArrayList1.get(0);

        poprlogicaNode1 = new AFinalizaOprLogica(pfimlogicaNode2);
        }
	nodeList.add(poprlogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new70() /* reduce AParentesisFimLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFimLogica pfimlogicaNode1;
        {
            // Block
        TAbreParentesis tabreparentesisNode2;
        PExpLogica pexplogicaNode3;
        TFechaParentesis tfechaparentesisNode4;
        tabreparentesisNode2 = (TAbreParentesis)nodeArrayList1.get(0);
        pexplogicaNode3 = (PExpLogica)nodeArrayList2.get(0);
        tfechaparentesisNode4 = (TFechaParentesis)nodeArrayList3.get(0);

        pfimlogicaNode1 = new AParentesisFimLogica(tabreparentesisNode2, pexplogicaNode3, tfechaparentesisNode4);
        }
	nodeList.add(pfimlogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new71() /* reduce ASubstituiVarFimLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFimLogica pfimlogicaNode1;
        {
            // Block
        PVar pvarNode2;
        pvarNode2 = (PVar)nodeArrayList1.get(0);

        pfimlogicaNode1 = new ASubstituiVarFimLogica(pvarNode2);
        }
	nodeList.add(pfimlogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new72() /* reduce ASubstituiValorFimLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFimLogica pfimlogicaNode1;
        {
            // Block
        PValor pvalorNode2;
        pvalorNode2 = (PValor)nodeArrayList1.get(0);

        pfimlogicaNode1 = new ASubstituiValorFimLogica(pvalorNode2);
        }
	nodeList.add(pfimlogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new73() /* reduce ASomaExpAritPriUm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpAritPriUm pexparitpriumNode1;
        {
            // Block
        TSoma tsomaNode2;
        tsomaNode2 = (TSoma)nodeArrayList1.get(0);

        pexparitpriumNode1 = new ASomaExpAritPriUm(tsomaNode2);
        }
	nodeList.add(pexparitpriumNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new74() /* reduce ASubtracaoExpAritPriUm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpAritPriUm pexparitpriumNode1;
        {
            // Block
        TSub tsubNode2;
        tsubNode2 = (TSub)nodeArrayList1.get(0);

        pexparitpriumNode1 = new ASubtracaoExpAritPriUm(tsubNode2);
        }
	nodeList.add(pexparitpriumNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new75() /* reduce AMultiplicacaoExpAritPriDois */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpAritPriDois pexparitpridoisNode1;
        {
            // Block
        TMult tmultNode2;
        tmultNode2 = (TMult)nodeArrayList1.get(0);

        pexparitpridoisNode1 = new AMultiplicacaoExpAritPriDois(tmultNode2);
        }
	nodeList.add(pexparitpridoisNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new76() /* reduce ADivisaoExpAritPriDois */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpAritPriDois pexparitpridoisNode1;
        {
            // Block
        TDiv tdivNode2;
        tdivNode2 = (TDiv)nodeArrayList1.get(0);

        pexparitpridoisNode1 = new ADivisaoExpAritPriDois(tdivNode2);
        }
	nodeList.add(pexparitpridoisNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new77() /* reduce ALogicoExpAritPriDois */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpAritPriDois pexparitpridoisNode1;
        {
            // Block
        PExpLogica pexplogicaNode2;
        pexplogicaNode2 = (PExpLogica)nodeArrayList1.get(0);

        pexparitpridoisNode1 = new ALogicoExpAritPriDois(pexplogicaNode2);
        }
	nodeList.add(pexparitpridoisNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new78() /* reduce AIgualExpLogPriUm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogPriUm pexplogpriumNode1;
        {
            // Block
        TIgual tigualNode2;
        tigualNode2 = (TIgual)nodeArrayList1.get(0);

        pexplogpriumNode1 = new AIgualExpLogPriUm(tigualNode2);
        }
	nodeList.add(pexplogpriumNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new79() /* reduce ADiferenteExpLogPriUm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogPriUm pexplogpriumNode1;
        {
            // Block
        TDiferente tdiferenteNode2;
        tdiferenteNode2 = (TDiferente)nodeArrayList1.get(0);

        pexplogpriumNode1 = new ADiferenteExpLogPriUm(tdiferenteNode2);
        }
	nodeList.add(pexplogpriumNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new80() /* reduce AMenorExpLogPriDois */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogPriDois pexplogpridoisNode1;
        {
            // Block
        TMenor tmenorNode2;
        tmenorNode2 = (TMenor)nodeArrayList1.get(0);

        pexplogpridoisNode1 = new AMenorExpLogPriDois(tmenorNode2);
        }
	nodeList.add(pexplogpridoisNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new81() /* reduce AMenorigualExpLogPriDois */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogPriDois pexplogpridoisNode1;
        {
            // Block
        TMenorIgual tmenorigualNode2;
        tmenorigualNode2 = (TMenorIgual)nodeArrayList1.get(0);

        pexplogpridoisNode1 = new AMenorigualExpLogPriDois(tmenorigualNode2);
        }
	nodeList.add(pexplogpridoisNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new82() /* reduce AMaiorExpLogPriDois */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogPriDois pexplogpridoisNode1;
        {
            // Block
        TMaior tmaiorNode2;
        tmaiorNode2 = (TMaior)nodeArrayList1.get(0);

        pexplogpridoisNode1 = new AMaiorExpLogPriDois(tmaiorNode2);
        }
	nodeList.add(pexplogpridoisNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new83() /* reduce AMaiorigualExpLogPriDois */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogPriDois pexplogpridoisNode1;
        {
            // Block
        TMaiorIgual tmaiorigualNode2;
        tmaiorigualNode2 = (TMaiorIgual)nodeArrayList1.get(0);

        pexplogpridoisNode1 = new AMaiorigualExpLogPriDois(tmaiorigualNode2);
        }
	nodeList.add(pexplogpridoisNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new84() /* reduce ANotExpLogPriTres */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogPriTres pexplogpritresNode1;
        {
            // Block
        TNao tnaoNode2;
        tnaoNode2 = (TNao)nodeArrayList1.get(0);

        pexplogpritresNode1 = new ANotExpLogPriTres(tnaoNode2);
        }
	nodeList.add(pexplogpritresNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new85() /* reduce AAndExpLogPriTres */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogPriTres pexplogpritresNode1;
        {
            // Block
        TE teNode2;
        teNode2 = (TE)nodeArrayList1.get(0);

        pexplogpritresNode1 = new AAndExpLogPriTres(teNode2);
        }
	nodeList.add(pexplogpritresNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new86() /* reduce AOrExpLogPriTres */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogPriTres pexplogpritresNode1;
        {
            // Block
        TOu touNode2;
        touNode2 = (TOu)nodeArrayList1.get(0);

        pexplogpritresNode1 = new AOrExpLogPriTres(touNode2);
        }
	nodeList.add(pexplogpritresNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new87() /* reduce AXorExpLogPriTres */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogPriTres pexplogpritresNode1;
        {
            // Block
        TXor txorNode2;
        txorNode2 = (TXor)nodeArrayList1.get(0);

        pexplogpritresNode1 = new AXorExpLogPriTres(txorNode2);
        }
	nodeList.add(pexplogpritresNode1);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {0, SHIFT, 1}, },
			{{-1, ERROR, 1}, {52, SHIFT, 3}, },
			{{-1, ERROR, 2}, {56, ACCEPT, -1}, },
			{{-1, ERROR, 3}, {1, SHIFT, 4}, },
			{{-1, ERROR, 4}, {3, SHIFT, 5}, {4, SHIFT, 6}, {5, SHIFT, 7}, {6, SHIFT, 8}, {13, SHIFT, 9}, {15, SHIFT, 10}, {16, SHIFT, 11}, {17, SHIFT, 12}, {18, SHIFT, 13}, {33, SHIFT, 14}, {34, SHIFT, 15}, {35, SHIFT, 16}, {52, SHIFT, 17}, },
			{{-1, REDUCE, 5}, },
			{{-1, ERROR, 6}, {41, SHIFT, 32}, },
			{{-1, ERROR, 7}, {41, SHIFT, 33}, },
			{{-1, ERROR, 8}, {52, SHIFT, 34}, },
			{{-1, ERROR, 9}, {41, SHIFT, 35}, },
			{{-1, ERROR, 10}, {41, SHIFT, 36}, },
			{{-1, ERROR, 11}, {41, SHIFT, 37}, },
			{{-1, ERROR, 12}, {52, SHIFT, 17}, },
			{{-1, REDUCE, 19}, {4, SHIFT, 6}, {5, SHIFT, 7}, {13, SHIFT, 9}, {15, SHIFT, 10}, {16, SHIFT, 11}, {17, SHIFT, 12}, {18, SHIFT, 13}, {52, SHIFT, 17}, },
			{{-1, REDUCE, 11}, },
			{{-1, REDUCE, 10}, },
			{{-1, REDUCE, 12}, },
			{{-1, REDUCE, 13}, {43, SHIFT, 42}, },
			{{-1, REDUCE, 0}, },
			{{-1, REDUCE, 2}, },
			{{-1, REDUCE, 4}, },
			{{-1, ERROR, 21}, {3, SHIFT, 5}, {4, SHIFT, 6}, {5, SHIFT, 7}, {6, SHIFT, 8}, {13, SHIFT, 9}, {15, SHIFT, 10}, {16, SHIFT, 11}, {17, SHIFT, 12}, {18, SHIFT, 13}, {33, SHIFT, 14}, {34, SHIFT, 15}, {35, SHIFT, 16}, {52, SHIFT, 17}, },
			{{-1, ERROR, 22}, {40, SHIFT, 44}, },
			{{-1, ERROR, 23}, {45, SHIFT, 45}, },
			{{-1, ERROR, 24}, {3, SHIFT, 5}, {4, SHIFT, 6}, {5, SHIFT, 7}, {13, SHIFT, 9}, {15, SHIFT, 10}, {16, SHIFT, 11}, {17, SHIFT, 12}, {18, SHIFT, 13}, {52, SHIFT, 17}, },
			{{-1, REDUCE, 21}, },
			{{-1, REDUCE, 22}, },
			{{-1, REDUCE, 23}, },
			{{-1, REDUCE, 24}, },
			{{-1, REDUCE, 25}, },
			{{-1, REDUCE, 26}, },
			{{-1, REDUCE, 27}, },
			{{-1, ERROR, 32}, {41, SHIFT, 47}, {48, SHIFT, 48}, {49, SHIFT, 49}, {50, SHIFT, 50}, {52, SHIFT, 17}, },
			{{-1, ERROR, 33}, {41, SHIFT, 47}, {48, SHIFT, 48}, {49, SHIFT, 49}, {50, SHIFT, 50}, {52, SHIFT, 17}, },
			{{-1, ERROR, 34}, {48, SHIFT, 48}, {49, SHIFT, 49}, {50, SHIFT, 50}, },
			{{-1, ERROR, 35}, {41, SHIFT, 60}, {48, SHIFT, 48}, {49, SHIFT, 49}, {50, SHIFT, 50}, {52, SHIFT, 17}, },
			{{-1, ERROR, 36}, {41, SHIFT, 47}, {48, SHIFT, 48}, {49, SHIFT, 49}, {50, SHIFT, 50}, {52, SHIFT, 17}, },
			{{-1, ERROR, 37}, {41, SHIFT, 60}, {48, SHIFT, 48}, {49, SHIFT, 49}, {50, SHIFT, 50}, {52, SHIFT, 17}, },
			{{-1, ERROR, 38}, {9, SHIFT, 69}, },
			{{-1, ERROR, 39}, {8, SHIFT, 70}, },
			{{-1, REDUCE, 19}, {4, SHIFT, 6}, {5, SHIFT, 7}, {13, SHIFT, 9}, {15, SHIFT, 10}, {16, SHIFT, 11}, {17, SHIFT, 12}, {18, SHIFT, 13}, {52, SHIFT, 17}, },
			{{-1, REDUCE, 48}, },
			{{-1, ERROR, 42}, {48, SHIFT, 72}, },
			{{-1, REDUCE, 1}, },
			{{-1, ERROR, 44}, {52, SHIFT, 17}, },
			{{-1, ERROR, 45}, {41, SHIFT, 47}, {48, SHIFT, 48}, {49, SHIFT, 49}, {50, SHIFT, 50}, {52, SHIFT, 17}, },
			{{-1, REDUCE, 3}, },
			{{-1, ERROR, 47}, {41, SHIFT, 47}, {48, SHIFT, 48}, {49, SHIFT, 49}, {50, SHIFT, 50}, {52, SHIFT, 17}, },
			{{-1, REDUCE, 16}, },
			{{-1, REDUCE, 17}, },
			{{-1, REDUCE, 15}, },
			{{-1, REDUCE, 62}, },
			{{-1, REDUCE, 63}, },
			{{-1, REDUCE, 28}, },
			{{-1, ERROR, 54}, {37, SHIFT, 77}, {42, SHIFT, 78}, },
			{{-1, REDUCE, 58}, {19, SHIFT, 80}, {20, SHIFT, 81}, },
			{{-1, REDUCE, 60}, {21, SHIFT, 83}, {22, SHIFT, 84}, {41, SHIFT, 60}, {48, SHIFT, 48}, {49, SHIFT, 49}, {50, SHIFT, 50}, {52, SHIFT, 17}, },
			{{-1, REDUCE, 32}, },
			{{-1, ERROR, 58}, {37, SHIFT, 87}, {42, SHIFT, 88}, },
			{{-1, ERROR, 59}, {39, SHIFT, 90}, },
			{{-1, ERROR, 60}, {41, SHIFT, 60}, {48, SHIFT, 48}, {49, SHIFT, 49}, {50, SHIFT, 50}, {52, SHIFT, 17}, },
			{{-1, REDUCE, 71}, },
			{{-1, REDUCE, 72}, },
			{{-1, ERROR, 63}, {42, SHIFT, 92}, },
			{{-1, REDUCE, 65}, {25, SHIFT, 93}, {28, SHIFT, 94}, },
			{{-1, REDUCE, 67}, {23, SHIFT, 96}, {24, SHIFT, 97}, {26, SHIFT, 98}, {27, SHIFT, 99}, },
			{{-1, REDUCE, 69}, {29, SHIFT, 101}, {30, SHIFT, 102}, {31, SHIFT, 103}, {32, SHIFT, 104}, },
			{{-1, ERROR, 67}, {42, SHIFT, 106}, },
			{{-1, ERROR, 68}, {42, SHIFT, 107}, },
			{{-1, ERROR, 69}, {48, SHIFT, 108}, },
			{{-1, ERROR, 70}, {41, SHIFT, 109}, },
			{{-1, REDUCE, 18}, },
			{{-1, ERROR, 72}, {44, SHIFT, 111}, },
			{{-1, ERROR, 73}, {39, SHIFT, 112}, },
			{{-1, REDUCE, 9}, {37, SHIFT, 113}, },
			{{-1, ERROR, 75}, {39, SHIFT, 114}, },
			{{-1, ERROR, 76}, {42, SHIFT, 115}, },
			{{-1, ERROR, 77}, {41, SHIFT, 47}, {48, SHIFT, 48}, {49, SHIFT, 49}, {50, SHIFT, 50}, {52, SHIFT, 17}, },
			{{-1, ERROR, 78}, {39, SHIFT, 117}, },
			{{-1, REDUCE, 30}, },
			{{-1, REDUCE, 73}, },
			{{-1, REDUCE, 74}, },
			{{-1, ERROR, 82}, {41, SHIFT, 47}, {48, SHIFT, 48}, {49, SHIFT, 49}, {50, SHIFT, 50}, {52, SHIFT, 17}, },
			{{-1, REDUCE, 75}, },
			{{-1, REDUCE, 76}, },
			{{-1, REDUCE, 77}, },
			{{-1, ERROR, 86}, {41, SHIFT, 47}, {48, SHIFT, 48}, {49, SHIFT, 49}, {50, SHIFT, 50}, {52, SHIFT, 17}, },
			{{-1, ERROR, 87}, {41, SHIFT, 47}, {48, SHIFT, 48}, {49, SHIFT, 49}, {50, SHIFT, 50}, {52, SHIFT, 17}, },
			{{-1, ERROR, 88}, {39, SHIFT, 121}, },
			{{-1, REDUCE, 34}, },
			{{-1, REDUCE, 7}, },
			{{-1, ERROR, 91}, {42, SHIFT, 122}, },
			{{-1, ERROR, 92}, {12, SHIFT, 123}, },
			{{-1, REDUCE, 78}, },
			{{-1, REDUCE, 79}, },
			{{-1, ERROR, 95}, {41, SHIFT, 60}, {48, SHIFT, 48}, {49, SHIFT, 49}, {50, SHIFT, 50}, {52, SHIFT, 17}, },
			{{-1, REDUCE, 82}, },
			{{-1, REDUCE, 80}, },
			{{-1, REDUCE, 83}, },
			{{-1, REDUCE, 81}, },
			{{-1, ERROR, 100}, {41, SHIFT, 60}, {48, SHIFT, 48}, {49, SHIFT, 49}, {50, SHIFT, 50}, {52, SHIFT, 17}, },
			{{-1, REDUCE, 84}, },
			{{-1, REDUCE, 85}, },
			{{-1, REDUCE, 86}, },
			{{-1, REDUCE, 87}, },
			{{-1, ERROR, 105}, {41, SHIFT, 60}, {48, SHIFT, 48}, {49, SHIFT, 49}, {50, SHIFT, 50}, {52, SHIFT, 17}, },
			{{-1, ERROR, 106}, {2, SHIFT, 127}, {11, SHIFT, 128}, {14, SHIFT, 129}, },
			{{-1, ERROR, 107}, {7, SHIFT, 133}, },
			{{-1, ERROR, 108}, {8, SHIFT, 134}, {10, SHIFT, 135}, },
			{{-1, ERROR, 109}, {41, SHIFT, 60}, {48, SHIFT, 48}, {49, SHIFT, 49}, {50, SHIFT, 50}, {52, SHIFT, 17}, },
			{{-1, REDUCE, 49}, },
			{{-1, REDUCE, 14}, },
			{{-1, REDUCE, 6}, },
			{{-1, ERROR, 113}, {52, SHIFT, 17}, },
			{{-1, REDUCE, 20}, },
			{{-1, REDUCE, 61}, },
			{{-1, REDUCE, 29}, },
			{{-1, REDUCE, 31}, },
			{{-1, REDUCE, 57}, },
			{{-1, REDUCE, 59}, },
			{{-1, REDUCE, 33}, },
			{{-1, REDUCE, 35}, },
			{{-1, REDUCE, 70}, },
			{{-1, REDUCE, 19}, {4, SHIFT, 6}, {5, SHIFT, 7}, {13, SHIFT, 9}, {15, SHIFT, 10}, {16, SHIFT, 11}, {17, SHIFT, 12}, {18, SHIFT, 13}, {52, SHIFT, 17}, },
			{{-1, REDUCE, 64}, },
			{{-1, REDUCE, 66}, },
			{{-1, REDUCE, 68}, },
			{{-1, ERROR, 127}, {15, SHIFT, 141}, },
			{{-1, ERROR, 128}, {40, SHIFT, 142}, },
			{{-1, ERROR, 129}, {48, SHIFT, 48}, {49, SHIFT, 49}, {50, SHIFT, 50}, },
			{{-1, REDUCE, 40}, },
			{{-1, REDUCE, 42}, },
			{{-1, REDUCE, 44}, },
			{{-1, REDUCE, 19}, {4, SHIFT, 6}, {5, SHIFT, 7}, {13, SHIFT, 9}, {15, SHIFT, 10}, {16, SHIFT, 11}, {17, SHIFT, 12}, {18, SHIFT, 13}, {52, SHIFT, 17}, },
			{{-1, ERROR, 134}, {48, SHIFT, 145}, },
			{{-1, ERROR, 135}, {48, SHIFT, 146}, },
			{{-1, REDUCE, 51}, },
			{{-1, REDUCE, 53}, },
			{{-1, ERROR, 138}, {42, SHIFT, 147}, },
			{{-1, REDUCE, 8}, },
			{{-1, ERROR, 140}, {2, SHIFT, 148}, {11, SHIFT, 149}, },
			{{-1, ERROR, 141}, {39, SHIFT, 152}, },
			{{-1, REDUCE, 19}, {4, SHIFT, 6}, {5, SHIFT, 7}, {13, SHIFT, 9}, {15, SHIFT, 10}, {16, SHIFT, 11}, {17, SHIFT, 12}, {18, SHIFT, 13}, {52, SHIFT, 17}, },
			{{-1, ERROR, 143}, {40, SHIFT, 154}, },
			{{-1, ERROR, 144}, {2, SHIFT, 155}, },
			{{-1, ERROR, 145}, {7, SHIFT, 157}, },
			{{-1, ERROR, 146}, {8, SHIFT, 134}, },
			{{-1, ERROR, 147}, {39, SHIFT, 160}, },
			{{-1, ERROR, 148}, {13, SHIFT, 161}, },
			{{-1, REDUCE, 19}, {4, SHIFT, 6}, {5, SHIFT, 7}, {13, SHIFT, 9}, {15, SHIFT, 10}, {16, SHIFT, 11}, {17, SHIFT, 12}, {18, SHIFT, 13}, {52, SHIFT, 17}, },
			{{-1, ERROR, 150}, {2, SHIFT, 148}, },
			{{-1, REDUCE, 36}, },
			{{-1, REDUCE, 45}, },
			{{-1, ERROR, 153}, {2, SHIFT, 127}, },
			{{-1, REDUCE, 19}, {4, SHIFT, 6}, {5, SHIFT, 7}, {13, SHIFT, 9}, {15, SHIFT, 10}, {16, SHIFT, 11}, {17, SHIFT, 12}, {18, SHIFT, 13}, {52, SHIFT, 17}, },
			{{-1, ERROR, 155}, {16, SHIFT, 166}, },
			{{-1, REDUCE, 46}, },
			{{-1, REDUCE, 19}, {4, SHIFT, 6}, {5, SHIFT, 7}, {13, SHIFT, 9}, {15, SHIFT, 10}, {16, SHIFT, 11}, {17, SHIFT, 12}, {18, SHIFT, 13}, {52, SHIFT, 17}, },
			{{-1, REDUCE, 54}, },
			{{-1, REDUCE, 52}, },
			{{-1, REDUCE, 50}, },
			{{-1, ERROR, 161}, {39, SHIFT, 168}, },
			{{-1, REDUCE, 38}, },
			{{-1, REDUCE, 37}, },
			{{-1, REDUCE, 43}, },
			{{-1, ERROR, 165}, {2, SHIFT, 127}, {11, SHIFT, 128}, {14, SHIFT, 129}, },
			{{-1, ERROR, 166}, {39, SHIFT, 170}, },
			{{-1, ERROR, 167}, {2, SHIFT, 171}, },
			{{-1, REDUCE, 39}, },
			{{-1, REDUCE, 41}, },
			{{-1, REDUCE, 47}, },
			{{-1, ERROR, 171}, {17, SHIFT, 173}, },
			{{-1, REDUCE, 55}, },
			{{-1, ERROR, 173}, {39, SHIFT, 174}, },
			{{-1, REDUCE, 56}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 2}, },
			{{-1, 18}, {21, 43}, },
			{{-1, 19}, {24, 46}, },
			{{-1, 20}, },
			{{-1, 21}, },
			{{-1, 73}, {113, 139}, },
			{{-1, 22}, },
			{{-1, 23}, {12, 38}, {32, 51}, {33, 51}, {35, 61}, {36, 51}, {37, 61}, {44, 74}, {45, 51}, {47, 51}, {56, 61}, {60, 61}, {77, 51}, {82, 51}, {86, 51}, {87, 51}, {95, 61}, {100, 61}, {105, 61}, {109, 61}, {113, 74}, },
			{{-1, 52}, {34, 59}, {35, 62}, {37, 62}, {56, 62}, {60, 62}, {95, 62}, {100, 62}, {105, 62}, {109, 62}, {129, 143}, },
			{{-1, 39}, {40, 71}, {123, 140}, {133, 144}, {142, 153}, {149, 162}, {154, 165}, {157, 167}, },
			{{-1, 40}, {4, 24}, {21, 24}, {24, 24}, },
			{{-1, 25}, },
			{{-1, 53}, {77, 116}, },
			{{-1, 79}, },
			{{-1, 26}, },
			{{-1, 57}, {87, 120}, },
			{{-1, 89}, },
			{{-1, 27}, },
			{{-1, 150}, },
			{{-1, 151}, {150, 163}, },
			{{-1, 28}, },
			{{-1, 130}, {165, 169}, },
			{{-1, 131}, },
			{{-1, 132}, {153, 164}, },
			{{-1, 29}, },
			{{-1, 156}, },
			{{-1, 30}, },
			{{-1, 41}, },
			{{-1, 110}, },
			{{-1, 31}, },
			{{-1, 136}, },
			{{-1, 137}, {146, 159}, },
			{{-1, 158}, },
			{{-1, 172}, },
			{{-1, 54}, {33, 58}, {36, 67}, {45, 75}, {47, 76}, {82, 118}, {87, 58}, },
			{{-1, 55}, {86, 119}, },
			{{-1, 56}, },
			{{-1, 63}, {37, 68}, {56, 85}, {60, 91}, {95, 124}, {109, 138}, },
			{{-1, 64}, {100, 125}, },
			{{-1, 65}, {105, 126}, },
			{{-1, 66}, },
			{{-1, 82}, },
			{{-1, 86}, },
			{{-1, 95}, },
			{{-1, 100}, },
			{{-1, 105}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'programa'",
			"expecting: id",
			"expecting: EOF",
			"expecting: 'inicio'",
			"expecting: 'fim.', 'leia', 'escreva', 'const', 'se', 'avalie', 'enquanto', 'para', 'repita', 'inteiro', 'real', 'caractere', id",
			"expecting: '('",
			"expecting: 'leia', 'escreva', 'ate', 'se', 'avalie', 'enquanto', 'para', 'repita', id",
			"expecting: dois pontos",
			"expecting: 'de', '+', '-', '*', '/', maior, menor, igual, maior igual, menor igual, diferente, 'nao', 'e', 'ou', 'xor', virgula, ';', '(', ')', '[', atribuicao, inteiro, real, string, id",
			"expecting: atribuicao",
			"expecting: 'fim.', 'leia', 'escreva', 'se', 'avalie', 'enquanto', 'para', 'repita', id",
			"expecting: 'fim', 'fim.', 'leia', 'escreva', 'ate', 'senao', 'se', 'caso', 'avalie', 'enquanto', 'para', 'repita', id",
			"expecting: '(', inteiro, real, string, id",
			"expecting: inteiro, real, string",
			"expecting: 'de'",
			"expecting: 'ate'",
			"expecting: 'fim', 'leia', 'escreva', 'ate', 'senao', 'se', 'caso', 'avalie', 'enquanto', 'para', 'repita', id",
			"expecting: inteiro",
			"expecting: '+', '-', '*', '/', maior, menor, igual, maior igual, menor igual, diferente, 'nao', 'e', 'ou', 'xor', virgula, ';', dois pontos, '(', ')', inteiro, real, string, id",
			"expecting: '+', '-', '*', '/', virgula, ';', '(', ')', inteiro, real, string, id",
			"expecting: virgula, ')'",
			"expecting: '+', '-', virgula, ';', ')'",
			"expecting: ';'",
			"expecting: maior, menor, igual, maior igual, menor igual, diferente, 'nao', 'e', 'ou', 'xor', '(', ')', inteiro, real, string, id",
			"expecting: ')'",
			"expecting: igual, diferente, '(', ')', inteiro, real, string, id",
			"expecting: maior, menor, igual, maior igual, menor igual, diferente, '(', ')', inteiro, real, string, id",
			"expecting: 'fim', 'ate', 'senao', 'caso'",
			"expecting: ']'",
			"expecting: virgula, ';'",
			"expecting: 'entao'",
			"expecting: 'fim', 'senao', 'caso'",
			"expecting: 'faca'",
			"expecting: 'ate', 'passo'",
			"expecting: 'de', '+', '-', '*', '/', maior, menor, igual, maior igual, menor igual, diferente, 'nao', 'e', 'ou', 'xor', virgula, ';', '(', ')', atribuicao, inteiro, real, string, id",
			"expecting: virgula, ';', ')'",
			"expecting: 'fim', 'leia', 'escreva', 'senao', 'se', 'avalie', 'enquanto', 'para', 'repita', id",
			"expecting: '(', ')', inteiro, real, string, id",
			"expecting: 'avalie'",
			"expecting: 'fim', 'leia', 'escreva', 'se', 'avalie', 'enquanto', 'para', 'repita', id",
			"expecting: 'fim', 'senao'",
			"expecting: 'fim'",
			"expecting: 'se'",
			"expecting: 'fim', 'leia', 'escreva', 'senao', 'se', 'caso', 'avalie', 'enquanto', 'para', 'repita', id",
			"expecting: 'enquanto'",
			"expecting: 'para'",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 3, 4, 2, 5, 5, 1, 5, 5, 5, 1, 6, 7, 7, 7, 8, 2, 2, 2, 4, 7, 9, 10, 11, 11, 11, 11, 11, 11, 11, 12, 12, 13, 12, 12, 12, 14, 15, 16, 11, 17, 2, 1, 12, 2, 12, 18, 18, 18, 19, 19, 11, 20, 21, 19, 11, 20, 22, 12, 23, 23, 24, 25, 26, 23, 24, 24, 17, 5, 27, 28, 22, 29, 22, 24, 12, 22, 11, 12, 12, 12, 12, 12, 12, 12, 12, 22, 11, 4, 24, 30, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 31, 32, 33, 12, 11, 34, 4, 1, 11, 19, 11, 11, 35, 21, 11, 11, 23, 36, 37, 25, 26, 38, 7, 13, 11, 11, 11, 39, 17, 17, 11, 11, 24, 22, 40, 22, 39, 7, 41, 32, 15, 22, 42, 39, 41, 11, 11, 41, 43, 44, 11, 39, 11, 11, 11, 22, 41, 11, 11, 31, 22, 41, 11, 11, 11, 45, 11, 22, 11, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
