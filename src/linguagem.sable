Package linguagem ;

Helpers
	/* BASICOS */
	digitos = ['0' .. '9'];
	letras 	= ['a' .. 'z'] | ['A' .. 'Z'] | '_' | ['à' .. 'û'] | ['À' .. 'Û'];
	
	/* QUEBRA DE LINHA */
	tab = 9;
	cr = 13;
	lf = 10;
	nl = (cr lf | cr | lf);
	branco = (' ' | '	')+;
	palavras_reservadas = ( 'caractere'
						  | 'real'
						  | 'inteiro'
						  | 'inicio'
						  | 'fim'
						  | 'se'
						  | 'senao'
						  | 'enquanto'
						  | 'para'
						  | 'avalie'
						  | 'caso'
						  | 'verdadeiro'
						  | 'falso'
						  | 'booleano');
	
	/* " TUDO MENOS TAL COISA " */
	tudo = [0 .. 0xFFFF];
	sem_nl = [tudo - [cr + lf]]*;
	
States
	normal,
	comentario;
	
Tokens

{normal}
	/* ID */
	id = letras+ ((letras | digitos)*);

	/* DECLARACAO DOS VALORES */
	real 	= digitos+(',')(digitos)+;
	inteiro = digitos+;
	string 	= '''(letras+)''';
	booleano= 'verdadeiro' | 'falso';
	
	/* EXPRESSOES CONDICIONAIS */
	se = 'se';
	senao = 'senao';
	
	/* LOOPS */
	enquanto = 'enquanto';
	para = 'para';
	caso = 'caso';
	
	
	/* OPERADORES ARITMETICOS */
	soma 	= '+';
	sub 	= '-';
	mult 	= '*';
	div 	= '/';
	
	/* OPERADORES RELACIONAIS */
	maior 		= '>';
	menor 		= '<';
	igual 		= '=';
	maior_igual = '>=';
	menor_igual = '<=';
	diferente	= '<>';
	
	/* BLOCO */
	inicio_bloco= 'inicio';
	fim_bloco 	= 'fim';
	
	/* OUTROS TOKENS */
	atribuicao 		 = ':=';
	abre_parentesis  = '(';
	fecha_parentesis = ')';
	abre_colchetes 	 = '[';
	fecha_colchetes  = ']';
	ponto			 = '.';
	virgula			 = ',';
	ponto_e_virgula	 = ';';
	dois_pontos		 = ':';
	aspas_simples 	 = ''';
	aspas_duplas 	 = '"';
	nova_linha 		 = nl;
	espaco	 		 = ' ';
	tab				 = '	';
	
	/* COMENTARIOS */
	
{normal->comentario, comentario}
	comentario = '/*';
		
	
	
{comentario}	comentario_linha = '//' sem_nl* nl;
{comentario}	comentario_bloco_fecha = '*/';

IgnoredTokens
	comentario_linha;
	
/*
Productions
*/